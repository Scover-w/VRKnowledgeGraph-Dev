<?xml version="1.0" encoding="utf-8"?>
<doc>
    <assembly>
        <name>Azure.AI.OpenAI</name>
    </assembly>
    <members>
        <member name="T:Azure.AI.OpenAI.AzureOpenAIModelFactory">
            <summary> Model factory for models. </summary>
            <summary> Model factory for models. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.AzureOpenAIModelFactory.ChatChoice(Azure.AI.OpenAI.ChatMessage,System.Int32,Azure.AI.OpenAI.CompletionsFinishReason,Azure.AI.OpenAI.ChatMessage,Azure.AI.OpenAI.ContentFilterResults)">
            <summary> Initializes a new instance of ChatChoice. </summary>
            <param name="message"> The chat message associated with this chat completions choice </param>
            <param name="index"> The ordered index associated with this chat completions choice. </param>
            <param name="finishReason"> The reason that this chat completions choice completed its generated. </param>
            <param name="deltaMessage"> For streamed choices, the internal representation of a 'delta' payload </param>
            <param name="contentFilterResults"> The category annotations for this chat choice's content filtering </param>
            <returns> A new <see cref="T:Azure.AI.OpenAI.ChatChoice" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.AI.OpenAI.AzureOpenAIModelFactory.StreamingChoice(Azure.AI.OpenAI.Choice)">
            <summary>
            Initializes a new instance of StreamingChoice for tests and mocking.
            </summary>
            <param name="originalBaseChoice"> An underlying Choice for this streaming representation </param>
            <returns> A new instance of StreamingChoice </returns>
        </member>
        <member name="M:Azure.AI.OpenAI.AzureOpenAIModelFactory.StreamingCompletions(Azure.AI.OpenAI.Completions,System.Collections.Generic.List{Azure.AI.OpenAI.StreamingChoice})">
            <summary>
            Initializes a new instance of StreamingCompletions for tests and mocking.
            </summary>
            <param name="baseCompletions"> The non-streaming completions to base this streaming representation on </param>
            <param name="streamingChoices"> The streaming choices associated with this streaming completions </param>
            <returns> A new instance of StreamingCompletions </returns>
        </member>
        <member name="M:Azure.AI.OpenAI.AzureOpenAIModelFactory.StreamingChatChoice(Azure.AI.OpenAI.ChatChoice)">
            <summary>
            Initializes a new instance of StreamingChatChoice for tests and mocking.
            </summary>
            <param name="originalBaseChoice"> An underlying ChatChoice for this streaming representation </param>
            <returns> A new instance of StreamingChatChoice </returns>
        </member>
        <member name="M:Azure.AI.OpenAI.AzureOpenAIModelFactory.StreamingChatCompletions(Azure.AI.OpenAI.ChatCompletions,System.Collections.Generic.List{Azure.AI.OpenAI.StreamingChatChoice})">
            <summary>
            Initializes a new instance of StreamingChatCompletions for tests and mocking.
            </summary>
            <param name="baseChatCompletions"> The non-streaming completions to base this streaming representation on </param>
            <param name="streamingChatChoices"> The streaming choices associated with this streaming chat completions </param>
            <returns> A new instance of StreamingChatCompletions </returns>
        </member>
        <member name="M:Azure.AI.OpenAI.AzureOpenAIModelFactory.Embeddings(System.Collections.Generic.IEnumerable{Azure.AI.OpenAI.EmbeddingItem},Azure.AI.OpenAI.EmbeddingsUsage)">
            <summary> Initializes a new instance of Embeddings. </summary>
            <param name="data"> Embedding values for the prompts submitted in the request. </param>
            <param name="usage"> Usage counts for tokens input using the embeddings API. </param>
            <returns> A new <see cref="T:Azure.AI.OpenAI.Embeddings" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.AI.OpenAI.AzureOpenAIModelFactory.EmbeddingItem(System.Collections.Generic.IEnumerable{System.Single},System.Int32)">
            <summary> Initializes a new instance of EmbeddingItem. </summary>
            <param name="embedding">
            List of embeddings value for the input prompt. These represent a measurement of the
            vector-based relatedness of the provided input.
            </param>
            <param name="index"> Index of the prompt to which the EmbeddingItem corresponds. </param>
            <returns> A new <see cref="T:Azure.AI.OpenAI.EmbeddingItem" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.AI.OpenAI.AzureOpenAIModelFactory.EmbeddingsUsage(System.Int32,System.Int32)">
            <summary> Initializes a new instance of EmbeddingsUsage. </summary>
            <param name="promptTokens"> Number of tokens sent in the original request. </param>
            <param name="totalTokens"> Total number of tokens transacted in this request/response. </param>
            <returns> A new <see cref="T:Azure.AI.OpenAI.EmbeddingsUsage" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.AI.OpenAI.AzureOpenAIModelFactory.Completions(System.String,System.DateTimeOffset,System.Collections.Generic.IEnumerable{Azure.AI.OpenAI.PromptFilterResult},System.Collections.Generic.IEnumerable{Azure.AI.OpenAI.Choice},Azure.AI.OpenAI.CompletionsUsage)">
            <summary> Initializes a new instance of Completions. </summary>
            <param name="id"> A unique identifier associated with this completions response. </param>
            <param name="created">
            The first timestamp associated with generation activity for this completions response,
            represented as seconds since the beginning of the Unix epoch of 00:00 on 1 Jan 1970.
            </param>
            <param name="promptFilterResults">
            Content filtering results for zero or more prompts in the request. In a streaming request,
            results for different prompts may arrive at different times or in different orders.
            </param>
            <param name="choices">
            The collection of completions choices associated with this completions response.
            Generally, `n` choices are generated per provided prompt with a default value of 1.
            Token limits and other settings may limit the number of choices generated.
            </param>
            <param name="usage"> Usage information for tokens processed and generated as part of this completions operation. </param>
            <returns> A new <see cref="T:Azure.AI.OpenAI.Completions" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.AI.OpenAI.AzureOpenAIModelFactory.PromptFilterResult(System.Int32,Azure.AI.OpenAI.ContentFilterResults)">
            <summary> Initializes a new instance of PromptFilterResult. </summary>
            <param name="promptIndex"> The index of this prompt in the set of prompt results. </param>
            <param name="contentFilterResults"> Content filtering results for this prompt. </param>
            <returns> A new <see cref="T:Azure.AI.OpenAI.PromptFilterResult" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.AI.OpenAI.AzureOpenAIModelFactory.ContentFilterResults(Azure.AI.OpenAI.ContentFilterResult,Azure.AI.OpenAI.ContentFilterResult,Azure.AI.OpenAI.ContentFilterResult,Azure.AI.OpenAI.ContentFilterResult)">
            <summary> Initializes a new instance of ContentFilterResults. </summary>
            <param name="sexual">
            Describes language related to anatomical organs and genitals, romantic relationships,
             acts portrayed in erotic or affectionate terms, physical sexual acts, including
             those portrayed as an assault or a forced sexual violent act against one’s will,
             prostitution, pornography, and abuse.
            </param>
            <param name="violence">
            Describes language related to physical actions intended to hurt, injure, damage, or
            kill someone or something; describes weapons, etc.
            </param>
            <param name="hate">
            Describes language attacks or uses that include pejorative or discriminatory language
            with reference to a person or identity group on the basis of certain differentiating
            attributes of these groups including but not limited to race, ethnicity, nationality,
            gender identity and expression, sexual orientation, religion, immigration status, ability
            status, personal appearance, and body size.
            </param>
            <param name="selfHarm">
            Describes language related to physical actions intended to purposely hurt, injure,
            or damage one’s body, or kill oneself.
            </param>
            <returns> A new <see cref="T:Azure.AI.OpenAI.ContentFilterResults" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.AI.OpenAI.AzureOpenAIModelFactory.ContentFilterResult(Azure.AI.OpenAI.ContentFilterSeverity,System.Boolean)">
            <summary> Initializes a new instance of ContentFilterResult. </summary>
            <param name="severity"> Ratings for the intensity and risk level of filtered content. </param>
            <param name="filtered"> A value indicating whether or not the content has been filtered. </param>
            <returns> A new <see cref="T:Azure.AI.OpenAI.ContentFilterResult" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.AI.OpenAI.AzureOpenAIModelFactory.Choice(System.String,System.Int32,Azure.AI.OpenAI.ContentFilterResults,Azure.AI.OpenAI.CompletionsLogProbabilityModel,Azure.AI.OpenAI.CompletionsFinishReason)">
            <summary> Initializes a new instance of Choice. </summary>
            <param name="text"> The generated text for a given completions prompt. </param>
            <param name="index"> The ordered index associated with this completions choice. </param>
            <param name="contentFilterResults">
            Information about the content filtering category (hate, sexual, violence, self_harm), if it
            has been detected, as well as the severity level (very_low, low, medium, high-scale that
            determines the intensity and risk level of harmful content) and if it has been filtered or not.
            </param>
            <param name="logProbabilityModel"> The log probabilities model for tokens associated with this completions choice. </param>
            <param name="finishReason"> Reason for finishing. </param>
            <returns> A new <see cref="T:Azure.AI.OpenAI.Choice" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.AI.OpenAI.AzureOpenAIModelFactory.CompletionsLogProbabilityModel(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.Nullable{System.Single}},System.Collections.Generic.IEnumerable{System.Collections.Generic.IDictionary{System.String,System.Nullable{System.Single}}},System.Collections.Generic.IEnumerable{System.Int32})">
            <summary> Initializes a new instance of CompletionsLogProbabilityModel. </summary>
            <param name="tokens"> The textual forms of tokens evaluated in this probability model. </param>
            <param name="tokenLogProbabilities"> A collection of log probability values for the tokens in this completions data. </param>
            <param name="topLogProbabilities"> A mapping of tokens to maximum log probability values in this completions data. </param>
            <param name="textOffsets"> The text offsets associated with tokens in this completions data. </param>
            <returns> A new <see cref="T:Azure.AI.OpenAI.CompletionsLogProbabilityModel" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.AI.OpenAI.AzureOpenAIModelFactory.CompletionsUsage(System.Int32,System.Int32,System.Int32)">
            <summary> Initializes a new instance of CompletionsUsage. </summary>
            <param name="completionTokens"> The number of tokens generated across all completions emissions. </param>
            <param name="promptTokens"> The number of tokens in the provided prompts for the completions request. </param>
            <param name="totalTokens"> The total number of tokens processed for the completions request and response. </param>
            <returns> A new <see cref="T:Azure.AI.OpenAI.CompletionsUsage" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.AI.OpenAI.AzureOpenAIModelFactory.ChatCompletions(System.String,System.DateTimeOffset,System.Collections.Generic.IEnumerable{Azure.AI.OpenAI.ChatChoice},System.Collections.Generic.IEnumerable{Azure.AI.OpenAI.PromptFilterResult},Azure.AI.OpenAI.CompletionsUsage)">
            <summary> Initializes a new instance of ChatCompletions. </summary>
            <param name="id"> A unique identifier associated with this chat completions response. </param>
            <param name="created">
            The first timestamp associated with generation activity for this completions response,
            represented as seconds since the beginning of the Unix epoch of 00:00 on 1 Jan 1970.
            </param>
            <param name="choices">
            The collection of completions choices associated with this completions response.
            Generally, `n` choices are generated per provided prompt with a default value of 1.
            Token limits and other settings may limit the number of choices generated.
            </param>
            <param name="promptFilterResults">
            Content filtering results for zero or more prompts in the request. In a streaming request,
            results for different prompts may arrive at different times or in different orders.
            </param>
            <param name="usage"> Usage information for tokens processed and generated as part of this completions operation. </param>
            <returns> A new <see cref="T:Azure.AI.OpenAI.ChatCompletions" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.AI.OpenAI.AzureOpenAIModelFactory.ImageGenerations(System.DateTimeOffset,System.Collections.Generic.IEnumerable{Azure.AI.OpenAI.ImageLocation})">
            <summary> Initializes a new instance of ImageGenerations. </summary>
            <param name="created"> A timestamp when this job or item was created (in unix epochs). </param>
            <param name="data"> The images generated by the operator. </param>
            <returns> A new <see cref="T:Azure.AI.OpenAI.ImageGenerations" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.AI.OpenAI.AzureOpenAIModelFactory.ImageLocation(System.Uri)">
            <summary> Initializes a new instance of ImageLocation. </summary>
            <param name="url"> The URL that provides temporary access to download the generated image. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="url" /> is null. </exception>
            <returns> A new <see cref="T:Azure.AI.OpenAI.ImageLocation" /> instance for mocking. </returns>
        </member>
        <member name="T:Azure.AI.OpenAI.ChatChoice">
            <summary>
            The representation of a single prompt completion as part of an overall chat completions request.
            Generally, `n` choices are generated per provided prompt with a default value of 1.
            Token limits and other settings may limit the number of choices generated.
            </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.ChatChoice.#ctor(System.Int32,Azure.AI.OpenAI.CompletionsFinishReason)">
            <summary> Initializes a new instance of ChatChoice. </summary>
            <param name="index"> The ordered index associated with this chat completions choice. </param>
            <param name="finishReason"> The reason that this chat completions choice completed its generated. </param>
        </member>
        <member name="M:Azure.AI.OpenAI.ChatChoice.#ctor(Azure.AI.OpenAI.ChatMessage,System.Int32,Azure.AI.OpenAI.CompletionsFinishReason,Azure.AI.OpenAI.ChatMessage,Azure.AI.OpenAI.ContentFilterResults)">
            <summary> Initializes a new instance of ChatChoice. </summary>
            <param name="message"> The chat message for a given chat completions prompt. </param>
            <param name="index"> The ordered index associated with this chat completions choice. </param>
            <param name="finishReason"> The reason that this chat completions choice completed its generated. </param>
            <param name="internalStreamingDeltaMessage"> The delta message content for a streaming response. </param>
            <param name="contentFilterResults">
            Information about the content filtering category (hate, sexual, violence, self_harm), if it
            has been detected, as well as the severity level (very_low, low, medium, high-scale that
            determines the intensity and risk level of harmful content) and if it has been filtered or not.
            </param>
        </member>
        <member name="P:Azure.AI.OpenAI.ChatChoice.Message">
            <summary> The chat message for a given chat completions prompt. </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.ChatChoice.Index">
            <summary> The ordered index associated with this chat completions choice. </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.ChatChoice.FinishReason">
            <summary> The reason that this chat completions choice completed its generated. </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.ChatChoice.ContentFilterResults">
            <summary>
            Information about the content filtering category (hate, sexual, violence, self_harm), if it
            has been detected, as well as the severity level (very_low, low, medium, high-scale that
            determines the intensity and risk level of harmful content) and if it has been filtered or not.
            </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.ChatChoice.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="T:Azure.AI.OpenAI.ChatCompletionsOptions">
            <summary>
            The configuration information used for a chat completions request.
            </summary>
            <summary>
            The configuration information for a chat completions request.
            Completions support a wide variety of tasks and generate text that continues from or "completes"
            provided prompt data.
            </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.ChatCompletionsOptions.ChoiceCount">
            <summary>
                 Gets or sets the number of choices that should be generated per provided prompt.
                 Has a valid range of 1 to 128.
             </summary>
             <remarks>
                 Because this parameter generates many completions, it can quickly consume your token quota. Use
                 carefully and ensure reasonable settings for <see cref="P:Azure.AI.OpenAI.CompletionsOptions.MaxTokens" /> and <see cref="P:Azure.AI.OpenAI.CompletionsOptions.StopSequences" />.
            
                 <see cref="P:Azure.AI.OpenAI.CompletionsOptions.ChoicesPerPrompt" /> is equivalent to 'n' in the REST request schema.
             </remarks>
        </member>
        <member name="P:Azure.AI.OpenAI.ChatCompletionsOptions.FrequencyPenalty">
            <summary>
                Gets or sets a value that influences the probability of generated tokens appearing based on their
                cumulative frequency in generated text.
                Has a valid range of -2.0 to 2.0.
            </summary>
            <remarks>
                Positive values will make tokens less likely to appear as their frequency increases and decrease the
                model's likelihood of repeating the same statements verbatim.
            </remarks>
        </member>
        <member name="P:Azure.AI.OpenAI.ChatCompletionsOptions.MaxTokens">
            <summary> Gets the maximum number of tokens to generate. Has minimum of 0. </summary>
            <remarks>
                <see cref="P:Azure.AI.OpenAI.CompletionsOptions.MaxTokens" /> is equivalent to 'max_tokens' in the REST request schema.
            </remarks>
        </member>
        <member name="P:Azure.AI.OpenAI.ChatCompletionsOptions.NucleusSamplingFactor">
            <summary>
                 Gets or set a an alternative value to <see cref="P:Azure.AI.OpenAI.CompletionsOptions.Temperature" />, called nucleus sampling, that causes
                 the model to consider the results of the tokens with <see cref="P:Azure.AI.OpenAI.CompletionsOptions.NucleusSamplingFactor" /> probability
                 mass.
             </summary>
             <remarks>
                 As an example, a value of 0.1 will cause only the tokens comprising the top 10% of probability mass to
                 be considered.
            
                 It is not recommended to modify <see cref="P:Azure.AI.OpenAI.CompletionsOptions.Temperature" /> and <see cref="P:Azure.AI.OpenAI.CompletionsOptions.NucleusSamplingFactor" />
                 for the same completions request as the interaction of these two settings is difficult to predict.
            
                 <see cref="P:Azure.AI.OpenAI.CompletionsOptions.NucleusSamplingFactor" /> is equivalent to 'top_p' in the REST request schema.
             </remarks>
        </member>
        <member name="P:Azure.AI.OpenAI.ChatCompletionsOptions.PresencePenalty">
            <summary>
                Gets or sets a value that influences the probability of generated tokens appearing based on their
                existing presence in generated text.
                Has a valid range of -2.0 to 2.0.
            </summary>
            <remarks>
                Positive values will make tokens less likely to appear when they already exist and increase the
                model's likelihood to output new topics.
            </remarks>
        </member>
        <member name="P:Azure.AI.OpenAI.ChatCompletionsOptions.StopSequences">
            <summary>
                Gets a list of textual sequences that will end completions generation.
                A maximum of four stop sequences are allowed.
            </summary>
            <remarks>
                <see cref="P:Azure.AI.OpenAI.CompletionsOptions.StopSequences" /> is equivalent to 'stop' in the REST request schema.
            </remarks>
        </member>
        <member name="P:Azure.AI.OpenAI.ChatCompletionsOptions.Temperature">
            <summary>
                 Gets or sets the sampling temperature to use that controls the apparent creativity of generated
                 completions.
                 Has a valid range of 0.0 to 2.0 and defaults to 1.0 if not otherwise specified.
             </summary>
             <remarks>
                 Higher values will make output more random while lower values will make results more focused and
                 deterministic.
            
                 It is not recommended to modify <see cref="P:Azure.AI.OpenAI.CompletionsOptions.Temperature" /> and <see cref="P:Azure.AI.OpenAI.CompletionsOptions.NucleusSamplingFactor" />
                 for the same completions request as the interaction of these two settings is difficult to predict.
             </remarks>
        </member>
        <member name="P:Azure.AI.OpenAI.ChatCompletionsOptions.TokenSelectionBiases">
            <summary>
                 Gets a dictionary of modifications to the likelihood of specified GPT tokens appearing in a completions
                 result. Maps token IDs to associated bias scores from -100 to 100, with minimum and maximum values
                 corresponding to a ban or exclusive selection of that token, respectively.
             </summary>
             <remarks>
                 Token IDs are computed via external tokenizer tools.
                 The exact effect of specific bias values varies per model.
            
                 <see cref="P:Azure.AI.OpenAI.CompletionsOptions.TokenSelectionBiases" /> is equivalent to 'logit_bias' in the REST request schema.
             </remarks>
        </member>
        <member name="P:Azure.AI.OpenAI.ChatCompletionsOptions.User">
            <summary>
            An identifier for the caller or end user of the operation. This may be used for tracking
            or rate-limiting purposes.
            </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.ChatCompletionsOptions.Functions">
            <summary> A list of functions the model may generate JSON inputs for. </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.ChatCompletionsOptions.FunctionCall">
            <summary>
            Controls how the model will use provided Functions.
            </summary>
            <remarks>
                <list type="bullet">
                <item>
                    Providing a custom <see cref="T:Azure.AI.OpenAI.FunctionDefinition" /> will request that the model limit its
                    completions to function calls for that function.
                </item>
                <item>
                    <see cref="F:Azure.AI.OpenAI.FunctionDefinition.Auto" /> represents the default behavior and will allow the model
                    to freely select between issuing a stanard completions response or a call to any provided
                    function.
                </item>
                <item>
                    <see cref="F:Azure.AI.OpenAI.FunctionDefinition.None" /> will request that the model only issue standard
                    completions responses, irrespective of provided functions. Note that the function definitions
                    provided may still influence the completions content.
                </item>
                </list>
            </remarks>
        </member>
        <member name="M:Azure.AI.OpenAI.ChatCompletionsOptions.#ctor(System.Collections.Generic.IEnumerable{Azure.AI.OpenAI.ChatMessage})">
            <summary> Initializes a new instance of ChatCompletionsOptions. </summary>
            <param name="messages">
            The collection of context messages associated with this chat completions request.
            Typical usage begins with a chat message for the System role that provides instructions for
            the behavior of the assistant, followed by alternating messages between the User and
            Assistant roles.
            </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="messages" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.OpenAI.ChatCompletionsOptions.#ctor">
            <summary> Initializes a new instance of ChatCompletionsOptions. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="messages" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.OpenAI.ChatCompletionsOptions.#ctor(System.Collections.Generic.IList{Azure.AI.OpenAI.ChatMessage},System.Collections.Generic.IList{Azure.AI.OpenAI.FunctionDefinition},Azure.AI.OpenAI.FunctionDefinition,System.Nullable{System.Int32},System.Nullable{System.Single},System.Nullable{System.Single},System.Collections.Generic.IDictionary{System.String,System.Int32},System.String,System.Nullable{System.Int32},System.Collections.Generic.IList{System.String},System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Boolean},System.String)">
            <summary> Initializes a new instance of ChatCompletionsOptions. </summary>
            <param name="messages">
            The collection of context messages associated with this chat completions request.
            Typical usage begins with a chat message for the System role that provides instructions for
            the behavior of the assistant, followed by alternating messages between the User and
            Assistant roles.
            </param>
            <param name="functions"> A list of functions the model may generate JSON inputs for. </param>
            <param name="functionCall">
            Controls how the model responds to function calls. "none" means the model does not call a function,
            and responds to the end-user. "auto" means the model can pick between an end-user or calling a function.
             Specifying a particular function via `{"name": "my_function"}` forces the model to call that function.
             "none" is the default when no functions are present. "auto" is the default if functions are present.
            </param>
            <param name="maxTokens"> The maximum number of tokens to generate. </param>
            <param name="temperature">
            The sampling temperature to use that controls the apparent creativity of generated completions.
            Higher values will make output more random while lower values will make results more focused
            and deterministic.
            It is not recommended to modify temperature and top_p for the same completions request as the
            interaction of these two settings is difficult to predict.
            </param>
            <param name="nucleusSamplingFactor">
            An alternative to sampling with temperature called nucleus sampling. This value causes the
            model to consider the results of tokens with the provided probability mass. As an example, a
            value of 0.15 will cause only the tokens comprising the top 15% of probability mass to be
            considered.
            It is not recommended to modify temperature and top_p for the same completions request as the
            interaction of these two settings is difficult to predict.
            </param>
            <param name="internalStringKeyedTokenSelectionBiases">
            A map between GPT token IDs and bias scores that influences the probability of specific tokens
            appearing in a completions response. Token IDs are computed via external tokenizer tools, while
            bias scores reside in the range of -100 to 100 with minimum and maximum values corresponding to
            a full ban or exclusive selection of a token, respectively. The exact behavior of a given bias
            score varies by model.
            </param>
            <param name="user">
            An identifier for the caller or end user of the operation. This may be used for tracking
            or rate-limiting purposes.
            </param>
            <param name="choiceCount">
            The number of chat completions choices that should be generated for a chat completions
            response.
            Because this setting can generate many completions, it may quickly consume your token quota.
            Use carefully and ensure reasonable settings for max_tokens and stop.
            </param>
            <param name="stopSequences"> A collection of textual sequences that will end completions generation. </param>
            <param name="presencePenalty">
            A value that influences the probability of generated tokens appearing based on their existing
            presence in generated text.
            Positive values will make tokens less likely to appear when they already exist and increase the
            model's likelihood to output new topics.
            </param>
            <param name="frequencyPenalty">
            A value that influences the probability of generated tokens appearing based on their cumulative
            frequency in generated text.
            Positive values will make tokens less likely to appear as their frequency increases and
            decrease the likelihood of the model repeating the same statements verbatim.
            </param>
            <param name="internalShouldStreamResponse"> A value indicating whether chat completions should be streamed for this request. </param>
            <param name="internalNonAzureModelName">
            The model name to provide as part of this completions request.
            Not applicable to Azure OpenAI, where deployment information should be included in the Azure
            resource URI that's connected to.
            </param>
        </member>
        <member name="P:Azure.AI.OpenAI.ChatCompletionsOptions.Messages">
            <summary>
            The collection of context messages associated with this chat completions request.
            Typical usage begins with a chat message for the System role that provides instructions for
            the behavior of the assistant, followed by alternating messages between the User and
            Assistant roles.
            </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.ChatCompletionsOptions.ToRequestContent">
            <summary> Convert into a Utf8JsonRequestContent. </summary>
        </member>
        <member name="T:Azure.AI.OpenAI.ChatMessage">
            <summary> A single, role-attributed message within a chat completion interaction. </summary>
            <summary> A single, role-attributed message within a chat completion interaction. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.ChatMessage.#ctor">
            <summary> Initializes a new instance of ChatMessage. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.ChatMessage.#ctor(Azure.AI.OpenAI.ChatRole,System.String)">
            <summary> Initializes a new instance of ChatMessage. </summary>
            <param name="role"> The role associated with this message payload. </param>
            <param name="content"> The text associated with this message payload. </param>
        </member>
        <member name="M:Azure.AI.OpenAI.ChatMessage.#ctor(Azure.AI.OpenAI.ChatRole,System.String,System.String,Azure.AI.OpenAI.FunctionCall)">
            <summary> Initializes a new instance of ChatMessage. </summary>
            <param name="role"> The role associated with this message payload. </param>
            <param name="content"> The text associated with this message payload. </param>
            <param name="name">
            The name of the author of this message. `name` is required if role is `function`, and it should be the name of the
            function whose response is in the `content`. May contain a-z, A-Z, 0-9, and underscores, with a maximum length of
            64 characters.
            </param>
            <param name="functionCall"> The name and arguments of a function that should be called, as generated by the model. </param>
        </member>
        <member name="P:Azure.AI.OpenAI.ChatMessage.Role">
            <summary> The role associated with this message payload. </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.ChatMessage.Content">
            <summary> The text associated with this message payload. </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.ChatMessage.Name">
            <summary>
            The name of the author of this message. `name` is required if role is `function`, and it should be the name of the
            function whose response is in the `content`. May contain a-z, A-Z, 0-9, and underscores, with a maximum length of
            64 characters.
            </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.ChatMessage.FunctionCall">
            <summary> The name and arguments of a function that should be called, as generated by the model. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.ChatMessage.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="M:Azure.AI.OpenAI.ChatMessage.ToRequestContent">
            <summary> Convert into a Utf8JsonRequestContent. </summary>
        </member>
        <member name="T:Azure.AI.OpenAI.Choice">
            <summary>
            The representation of a single prompt completion as part of an overall completions request.
            Generally, `n` choices are generated per provided prompt with a default value of 1.
            Token limits and other settings may limit the number of choices generated.
            </summary>
            <summary>
            The representation of a single prompt completion as part of an overall completions request.
            Generally, `n` choices are generated per provided prompt with a default value of 1.
            Token limits and other settings may limit the number of choices generated.
            </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.Choice.#ctor(System.String,System.Int32,Azure.AI.OpenAI.CompletionsLogProbabilityModel,Azure.AI.OpenAI.CompletionsFinishReason)">
            <summary> Initializes a new instance of Choice. </summary>
            <param name="text"> The generated text for a given completions prompt. </param>
            <param name="index"> The ordered index associated with this completions choice. </param>
            <param name="logProbabilityModel"> The log probabilities model for tokens associated with this completions choice. </param>
            <param name="finishReason"> Reason for finishing. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="text" /> or <paramref name="logProbabilityModel" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.OpenAI.Choice.#ctor(System.String,System.Int32,Azure.AI.OpenAI.ContentFilterResults,Azure.AI.OpenAI.CompletionsLogProbabilityModel,Azure.AI.OpenAI.CompletionsFinishReason)">
            <summary> Initializes a new instance of Choice. </summary>
            <param name="text"> The generated text for a given completions prompt. </param>
            <param name="index"> The ordered index associated with this completions choice. </param>
            <param name="contentFilterResults">
            Information about the content filtering category (hate, sexual, violence, self_harm), if it
            has been detected, as well as the severity level (very_low, low, medium, high-scale that
            determines the intensity and risk level of harmful content) and if it has been filtered or not.
            </param>
            <param name="logProbabilityModel"> The log probabilities model for tokens associated with this completions choice. </param>
            <param name="finishReason"> Reason for finishing. </param>
        </member>
        <member name="P:Azure.AI.OpenAI.Choice.Text">
            <summary> The generated text for a given completions prompt. </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.Choice.Index">
            <summary> The ordered index associated with this completions choice. </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.Choice.ContentFilterResults">
            <summary>
            Information about the content filtering category (hate, sexual, violence, self_harm), if it
            has been detected, as well as the severity level (very_low, low, medium, high-scale that
            determines the intensity and risk level of harmful content) and if it has been filtered or not.
            </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.Choice.LogProbabilityModel">
            <summary> The log probabilities model for tokens associated with this completions choice. </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.Choice.FinishReason">
            <summary> Reason for finishing. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.Choice.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="T:Azure.AI.OpenAI.CompletionsFinishReason">
            <summary> Representation of the manner in which a completions response concluded. </summary>
            <summary> Representation of the manner in which a completions response concluded. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.CompletionsFinishReason.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.OpenAI.CompletionsFinishReason" />. </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.CompletionsFinishReason.Stopped">
            <summary> Completions ended normally and reached its end of token generation. </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.CompletionsFinishReason.TokenLimitReached">
            <summary> Completions exhausted available token limits before generation could complete. </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.CompletionsFinishReason.ContentFiltered">
            <summary>
            Completions generated a response that was identified as potentially sensitive per content
            moderation policies.
            </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.CompletionsFinishReason.FunctionCall">
            <summary> Completion ended normally, with the model requesting a function to be called. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.CompletionsFinishReason.op_Equality(Azure.AI.OpenAI.CompletionsFinishReason,Azure.AI.OpenAI.CompletionsFinishReason)">
            <summary> Determines if two <see cref="T:Azure.AI.OpenAI.CompletionsFinishReason" /> values are the same. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.CompletionsFinishReason.op_Inequality(Azure.AI.OpenAI.CompletionsFinishReason,Azure.AI.OpenAI.CompletionsFinishReason)">
            <summary> Determines if two <see cref="T:Azure.AI.OpenAI.CompletionsFinishReason" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.CompletionsFinishReason.op_Implicit(System.String)~Azure.AI.OpenAI.CompletionsFinishReason">
            <summary> Converts a string to a <see cref="T:Azure.AI.OpenAI.CompletionsFinishReason" />. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.CompletionsFinishReason.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.AI.OpenAI.CompletionsFinishReason.Equals(Azure.AI.OpenAI.CompletionsFinishReason)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.AI.OpenAI.CompletionsFinishReason.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.AI.OpenAI.CompletionsFinishReason.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.AI.OpenAI.CompletionsOptions">
            <summary>
            The configuration information for a completions request.
            Completions support a wide variety of tasks and generate text that continues from or "completes"
            provided prompt data.
            </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.CompletionsOptions.ChoicesPerPrompt">
             <summary>
                 Gets or sets the number of choices that should be generated per provided prompt.
                 Has a valid range of 1 to 128.
             </summary>
             <remarks>
                 Because this parameter generates many completions, it can quickly consume your token quota. Use
                 carefully and ensure reasonable settings for <see cref="P:Azure.AI.OpenAI.CompletionsOptions.MaxTokens" /> and <see cref="P:Azure.AI.OpenAI.CompletionsOptions.StopSequences" />.
            
                 <see cref="P:Azure.AI.OpenAI.CompletionsOptions.ChoicesPerPrompt" /> is equivalent to 'n' in the REST request schema.
             </remarks>
        </member>
        <member name="P:Azure.AI.OpenAI.CompletionsOptions.Echo">
            <summary>
                Gets or sets a value specifying whether a completion should include its input prompt as a prefix to
                its generated output.
            </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.CompletionsOptions.FrequencyPenalty">
            <summary>
                Gets or sets a value that influences the probability of generated tokens appearing based on their
                cumulative frequency in generated text.
                Has a valid range of -2.0 to 2.0.
            </summary>
            <remarks>
                Positive values will make tokens less likely to appear as their frequency increases and decrease the
                model's likelihood of repeating the same statements verbatim.
            </remarks>
        </member>
        <member name="P:Azure.AI.OpenAI.CompletionsOptions.GenerationSampleCount">
             <summary>
                 Gets or sets a value that controls how many completions will be internally generated prior to response
                 formulation.
             </summary>
             <remarks>
                 When used together with <see cref="P:Azure.AI.OpenAI.CompletionsOptions.ChoicesPerPrompt" />, <see cref="P:Azure.AI.OpenAI.CompletionsOptions.GenerationSampleCount" /> controls
                 the number of candidate completions and must be greater than <see cref="P:Azure.AI.OpenAI.CompletionsOptions.ChoicesPerPrompt" />.
            
                 Because this parameter generates many completions, it can quickly consume your token quota. Use
                 carefully and ensure reasonable settings for <see cref="P:Azure.AI.OpenAI.CompletionsOptions.MaxTokens" /> and <see cref="P:Azure.AI.OpenAI.CompletionsOptions.StopSequences" />.
            
                 <see cref="P:Azure.AI.OpenAI.CompletionsOptions.GenerationSampleCount" /> is equivalent to 'best_of' in the REST request schema.
             </remarks>.
        </member>
        <member name="P:Azure.AI.OpenAI.CompletionsOptions.LogProbabilityCount">
            <summary>
                Gets or sets a value that controls generation of log probabilities on the
                <see cref="P:Azure.AI.OpenAI.CompletionsOptions.LogProbabilityCount" /> most likely tokens.
                Has a valid range of 0 to 5.
            </summary>
            <remarks>
                <see cref="P:Azure.AI.OpenAI.CompletionsOptions.LogProbabilityCount" /> is equivalent to 'logprobs' in the REST request schema.
            </remarks>
        </member>
        <member name="P:Azure.AI.OpenAI.CompletionsOptions.MaxTokens">
            <summary> Gets the maximum number of tokens to generate. Has minimum of 0. </summary>
            <remarks>
                <see cref="P:Azure.AI.OpenAI.CompletionsOptions.MaxTokens" /> is equivalent to 'max_tokens' in the REST request schema.
            </remarks>
        </member>
        <member name="P:Azure.AI.OpenAI.CompletionsOptions.NucleusSamplingFactor">
             <summary>
                 Gets or set a an alternative value to <see cref="P:Azure.AI.OpenAI.CompletionsOptions.Temperature" />, called nucleus sampling, that causes
                 the model to consider the results of the tokens with <see cref="P:Azure.AI.OpenAI.CompletionsOptions.NucleusSamplingFactor" /> probability
                 mass.
             </summary>
             <remarks>
                 As an example, a value of 0.1 will cause only the tokens comprising the top 10% of probability mass to
                 be considered.
            
                 It is not recommended to modify <see cref="P:Azure.AI.OpenAI.CompletionsOptions.Temperature" /> and <see cref="P:Azure.AI.OpenAI.CompletionsOptions.NucleusSamplingFactor" />
                 for the same completions request as the interaction of these two settings is difficult to predict.
            
                 <see cref="P:Azure.AI.OpenAI.CompletionsOptions.NucleusSamplingFactor" /> is equivalent to 'top_p' in the REST request schema.
             </remarks>
        </member>
        <member name="P:Azure.AI.OpenAI.CompletionsOptions.PresencePenalty">
            <summary>
                Gets or sets a value that influences the probability of generated tokens appearing based on their
                existing presence in generated text.
                Has a valid range of -2.0 to 2.0.
            </summary>
            <remarks>
                Positive values will make tokens less likely to appear when they already exist and increase the
                model's likelihood to output new topics.
            </remarks>
        </member>
        <member name="P:Azure.AI.OpenAI.CompletionsOptions.Prompts">
            <summary>
                Gets the prompts to generate completions from. Defaults to a single prompt of &lt;|endoftext|&gt;
                if not otherwise provided.
            </summary>
            <remarks>
                <see cref="P:Azure.AI.OpenAI.CompletionsOptions.Prompts" /> is equivalent to 'prompt' in the REST request schema.
            </remarks>
        </member>
        <member name="P:Azure.AI.OpenAI.CompletionsOptions.StopSequences">
            <summary>
                Gets a list of textual sequences that will end completions generation.
                A maximum of four stop sequences are allowed.
            </summary>
            <remarks>
                <see cref="P:Azure.AI.OpenAI.CompletionsOptions.StopSequences" /> is equivalent to 'stop' in the REST request schema.
            </remarks>
        </member>
        <member name="P:Azure.AI.OpenAI.CompletionsOptions.Temperature">
             <summary>
                 Gets or sets the sampling temperature to use that controls the apparent creativity of generated
                 completions.
                 Has a valid range of 0.0 to 2.0 and defaults to 1.0 if not otherwise specified.
             </summary>
             <remarks>
                 Higher values will make output more random while lower values will make results more focused and
                 deterministic.
            
                 It is not recommended to modify <see cref="P:Azure.AI.OpenAI.CompletionsOptions.Temperature" /> and <see cref="P:Azure.AI.OpenAI.CompletionsOptions.NucleusSamplingFactor" />
                 for the same completions request as the interaction of these two settings is difficult to predict.
             </remarks>
        </member>
        <member name="P:Azure.AI.OpenAI.CompletionsOptions.TokenSelectionBiases">
             <summary>
                 Gets a dictionary of modifications to the likelihood of specified GPT tokens appearing in a completions
                 result. Maps token IDs to associated bias scores from -100 to 100, with minimum and maximum values
                 corresponding to a ban or exclusive selection of that token, respectively.
             </summary>
             <remarks>
                 Token IDs are computed via external tokenizer tools.
                 The exact effect of specific bias values varies per model.
            
                 <see cref="P:Azure.AI.OpenAI.CompletionsOptions.TokenSelectionBiases" /> is equivalent to 'logit_bias' in the REST request schema.
             </remarks>
        </member>
        <member name="M:Azure.AI.OpenAI.CompletionsOptions.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary> Initializes a new instance of CompletionsOptions. </summary>
            <param name="prompts"> The prompts to generate completions from. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="prompts" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.OpenAI.CompletionsOptions.#ctor">
            <summary> Initializes a new instance of CompletionsOptions. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.CompletionsOptions.#ctor(System.Collections.Generic.IList{System.String},System.Nullable{System.Int32},System.Nullable{System.Single},System.Nullable{System.Single},System.Collections.Generic.IDictionary{System.String,System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Collections.Generic.IList{System.String},System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String)">
            <summary> Initializes a new instance of CompletionsOptions. </summary>
            <param name="prompts"> The prompts to generate completions from. </param>
            <param name="maxTokens"> The maximum number of tokens to generate. </param>
            <param name="temperature">
            The sampling temperature to use that controls the apparent creativity of generated completions.
            Higher values will make output more random while lower values will make results more focused
            and deterministic.
            It is not recommended to modify temperature and top_p for the same completions request as the
            interaction of these two settings is difficult to predict.
            </param>
            <param name="nucleusSamplingFactor">
            An alternative to sampling with temperature called nucleus sampling. This value causes the
            model to consider the results of tokens with the provided probability mass. As an example, a
            value of 0.15 will cause only the tokens comprising the top 15% of probability mass to be
            considered.
            It is not recommended to modify temperature and top_p for the same completions request as the
            interaction of these two settings is difficult to predict.
            </param>
            <param name="internalStringKeyedTokenSelectionBiases">
            A map between GPT token IDs and bias scores that influences the probability of specific tokens
            appearing in a completions response. Token IDs are computed via external tokenizer tools, while
            bias scores reside in the range of -100 to 100 with minimum and maximum values corresponding to
            a full ban or exclusive selection of a token, respectively. The exact behavior of a given bias
            score varies by model.
            </param>
            <param name="user">
            An identifier for the caller or end user of the operation. This may be used for tracking
            or rate-limiting purposes.
            </param>
            <param name="choicesPerPrompt">
            The number of completions choices that should be generated per provided prompt as part of an
            overall completions response.
            Because this setting can generate many completions, it may quickly consume your token quota.
            Use carefully and ensure reasonable settings for max_tokens and stop.
            </param>
            <param name="logProbabilityCount">
            A value that controls the emission of log probabilities for the provided number of most likely
            tokens within a completions response.
            </param>
            <param name="echo">
            A value specifying whether completions responses should include input prompts as prefixes to
            their generated output.
            </param>
            <param name="stopSequences"> A collection of textual sequences that will end completions generation. </param>
            <param name="presencePenalty">
            A value that influences the probability of generated tokens appearing based on their existing
            presence in generated text.
            Positive values will make tokens less likely to appear when they already exist and increase the
            model's likelihood to output new topics.
            </param>
            <param name="frequencyPenalty">
            A value that influences the probability of generated tokens appearing based on their cumulative
            frequency in generated text.
            Positive values will make tokens less likely to appear as their frequency increases and
            decrease the likelihood of the model repeating the same statements verbatim.
            </param>
            <param name="generationSampleCount">
            A value that controls how many completions will be internally generated prior to response
            formulation.
            When used together with n, best_of controls the number of candidate completions and must be
            greater than n.
            Because this setting can generate many completions, it may quickly consume your token quota.
            Use carefully and ensure reasonable settings for max_tokens and stop.
            </param>
            <param name="internalShouldStreamResponse"> A value indicating whether chat completions should be streamed for this request. </param>
            <param name="internalNonAzureModelName">
            The model name to provide as part of this completions request.
            Not applicable to Azure OpenAI, where deployment information should be included in the Azure
            resource URI that's connected to.
            </param>
        </member>
        <member name="P:Azure.AI.OpenAI.CompletionsOptions.User">
            <summary>
            An identifier for the caller or end user of the operation. This may be used for tracking
            or rate-limiting purposes.
            </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.CompletionsOptions.ToRequestContent">
            <summary> Convert into a Utf8JsonRequestContent. </summary>
        </member>
        <member name="T:Azure.AI.OpenAI.EmbeddingsOptions">
            <summary> Schema to create a prompt completion from a deployment. </summary>
            <summary>
            The configuration information for an embeddings request.
            Embeddings measure the relatedness of text strings and are commonly used for search, clustering,
            recommendations, and other similar scenarios.
            </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.EmbeddingsOptions.#ctor(System.String)">
            <summary> Initializes a new instance of EmbeddingsOptions. </summary>
             <param name="input">
             Input texts to get embeddings for, encoded as a an array of strings.
             Each input must not exceed 2048 tokens in length.
            
             Unless you are embedding code, we suggest replacing newlines (\n) in your input with a single space,
             as we have observed inferior results when newlines are present.
             </param>
             <exception cref="T:System.ArgumentNullException"> <paramref name="input" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.OpenAI.EmbeddingsOptions.#ctor">
            <summary> Initializes a new instance of EmbeddingsOptions. </summary>
             <exception cref="T:System.ArgumentNullException"> <paramref name="input" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.OpenAI.EmbeddingsOptions.#ctor(System.Collections.Generic.IEnumerable{System.String})">
             <summary> Initializes a new instance of EmbeddingsOptions. </summary>
             <param name="input">
             Input texts to get embeddings for, encoded as a an array of strings.
             Each input must not exceed 2048 tokens in length.
            
             Unless you are embedding code, we suggest replacing newlines (\n) in your input with a single space,
             as we have observed inferior results when newlines are present.
             </param>
             <exception cref="T:System.ArgumentNullException"> <paramref name="input" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.OpenAI.EmbeddingsOptions.#ctor(System.String,System.String,System.Collections.Generic.IList{System.String})">
             <summary> Initializes a new instance of EmbeddingsOptions. </summary>
             <param name="user">
             An identifier for the caller or end user of the operation. This may be used for tracking
             or rate-limiting purposes.
             </param>
             <param name="internalNonAzureModelName">
             The model name to provide as part of this embeddings request.
             Not applicable to Azure OpenAI, where deployment information should be included in the Azure
             resource URI that's connected to.
             </param>
             <param name="input">
             Input texts to get embeddings for, encoded as a an array of strings.
             Each input must not exceed 2048 tokens in length.
            
             Unless you are embedding code, we suggest replacing newlines (\n) in your input with a single space,
             as we have observed inferior results when newlines are present.
             </param>
        </member>
        <member name="P:Azure.AI.OpenAI.EmbeddingsOptions.User">
            <summary>
            An identifier for the caller or end user of the operation. This may be used for tracking
            or rate-limiting purposes.
            </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.EmbeddingsOptions.Input">
             <summary>
             Input texts to get embeddings for, encoded as a an array of strings.
             Each input must not exceed 2048 tokens in length.
            
             Unless you are embedding code, we suggest replacing newlines (\n) in your input with a single space,
             as we have observed inferior results when newlines are present.
             </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.EmbeddingsOptions.ToRequestContent">
            <summary> Convert into a Utf8JsonRequestContent. </summary>
        </member>
        <member name="T:Azure.AI.OpenAI.FunctionCall">
            <summary> The name and arguments of a function that should be called, as generated by the model. </summary>
            <summary> The name and arguments of a function that should be called, as generated by the model. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.FunctionCall.#ctor(System.String,System.String)">
            <summary> Initializes a new instance of FunctionCall. </summary>
            <param name="name"> The name of the function to call. </param>
            <param name="arguments">
            The arguments to call the function with, as generated by the model in JSON format.
            Note that the model does not always generate valid JSON, and may hallucinate parameters
            not defined by your function schema. Validate the arguments in your code before calling
            your function.
            </param>
        </member>
        <member name="P:Azure.AI.OpenAI.FunctionCall.Name">
            <summary> The name of the function to call. </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.FunctionCall.Arguments">
            <summary>
            The arguments to call the function with, as generated by the model in JSON format.
            Note that the model does not always generate valid JSON, and may hallucinate parameters
            not defined by your function schema. Validate the arguments in your code before calling
            your function.
            </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.FunctionCall.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="M:Azure.AI.OpenAI.FunctionCall.ToRequestContent">
            <summary> Convert into a Utf8JsonRequestContent. </summary>
        </member>
        <member name="T:Azure.AI.OpenAI.FunctionCallPreset">
            <summary>
            The collection of predefined behaviors for handling request-provided function information in a chat completions
            operation.
            </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.FunctionCallPreset.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.OpenAI.FunctionCallPreset" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.AI.OpenAI.FunctionCallPreset.Auto">
            <summary>
            Specifies that the model may either use any of the functions provided in this chat completions request or
            instead return a standard chat completions response as if no functions were provided.
            </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.FunctionCallPreset.None">
            <summary>
            Specifies that the model should not respond with a function call and should instead provide a standard chat
            completions response. Response content may still be influenced by the provided function information.
            </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.FunctionCallPreset.op_Equality(Azure.AI.OpenAI.FunctionCallPreset,Azure.AI.OpenAI.FunctionCallPreset)">
            <summary> Determines if two <see cref="T:Azure.AI.OpenAI.FunctionCallPreset" /> values are the same. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.FunctionCallPreset.op_Inequality(Azure.AI.OpenAI.FunctionCallPreset,Azure.AI.OpenAI.FunctionCallPreset)">
            <summary> Determines if two <see cref="T:Azure.AI.OpenAI.FunctionCallPreset" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.FunctionCallPreset.op_Implicit(System.String)~Azure.AI.OpenAI.FunctionCallPreset">
            <summary> Converts a string to a <see cref="T:Azure.AI.OpenAI.FunctionCallPreset" />. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.FunctionCallPreset.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.AI.OpenAI.FunctionCallPreset.Equals(Azure.AI.OpenAI.FunctionCallPreset)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.AI.OpenAI.FunctionCallPreset.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.AI.OpenAI.FunctionCallPreset.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.AI.OpenAI.FunctionDefinition">
            <summary> The definition of a caller-specified function that chat completions may invoke in response to matching user input. </summary>
            <summary> The definition of a caller-specified function that chat completions may invoke in response to matching user input. </summary>
        </member>
        <member name="F:Azure.AI.OpenAI.FunctionDefinition.Auto">
            <summary>
            Specifies that the model may either use any of the functions provided in this chat completions request or
            instead return a standard chat completions response as if no functions were provided.
            </summary>
        </member>
        <member name="F:Azure.AI.OpenAI.FunctionDefinition.None">
            <summary>
            Specifies that the model should not respond with a function call and should instead provide a standard chat
            completions response. Response content may still be influenced by the provided function information.
            </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.FunctionDefinition.#ctor">
            <summary>
            Initializes a new instance of FunctionDefinition.
            </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.FunctionDefinition.Name">
            <summary> The name of the function to be called. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.FunctionDefinition.#ctor(System.String)">
            <summary> Initializes a new instance of FunctionDefinition. </summary>
            <param name="name"> The name of the function to be called. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="name" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.OpenAI.FunctionDefinition.#ctor(System.String,System.String,System.BinaryData)">
            <summary> Initializes a new instance of FunctionDefinition. </summary>
            <param name="name"> The name of the function to be called. </param>
            <param name="description">
            A description of what the function does. The model will use this description when selecting the function and
            interpreting its parameters.
            </param>
            <param name="parameters"> The parameters the functions accepts, described as a JSON Schema object. </param>
        </member>
        <member name="P:Azure.AI.OpenAI.FunctionDefinition.Description">
            <summary>
            A description of what the function does. The model will use this description when selecting the function and
            interpreting its parameters.
            </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.FunctionDefinition.Parameters">
            <summary>
            The parameters the functions accepts, described as a JSON Schema object.
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para>
            <para>
            To assign an already formated json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para>
            <para>
            Examples:
            <list type="bullet">
            <item>
            <term>BinaryData.FromObjectAsJson("foo")</term>
            <description>Creates a payload of "foo".</description>
            </item>
            <item>
            <term>BinaryData.FromString("\"foo\"")</term>
            <description>Creates a payload of "foo".</description>
            </item>
            <item>
            <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
            <description>Creates a payload of { "key": "value" }.</description>
            </item>
            <item>
            <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
            <description>Creates a payload of { "key": "value" }.</description>
            </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.FunctionDefinition.ToRequestContent">
            <summary> Convert into a Utf8JsonRequestContent. </summary>
        </member>
        <member name="T:Azure.AI.OpenAI.FunctionName">
            <summary>
            A structure that specifies the exact name of a specific, request-provided function to use when processing a chat
            completions operation.
            </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.FunctionName.#ctor(System.String)">
            <summary> Initializes a new instance of FunctionName. </summary>
            <param name="name"> The name of the function to call. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="name" /> is null. </exception>
        </member>
        <member name="P:Azure.AI.OpenAI.FunctionName.Name">
            <summary> The name of the function to call. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.FunctionName.ToRequestContent">
            <summary> Convert into a Utf8JsonRequestContent. </summary>
        </member>
        <member name="T:Azure.AI.OpenAI.ImageGenerationOptions">
            <summary> Represents the request data used to generate images. </summary>
            <summary> Represents the request data used to generate images. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.ImageGenerationOptions.#ctor">
            <summary> Initializes a new instance of ImageGenerationOptions. </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.ImageGenerationOptions.Prompt">
            <summary>
            Gets or sets the description used to influence the generation of requested images.
            </summary>
            <remarks>
                For best results, ensure that the prompt is specific and sufficiently rich in details about
                desired topical content.
            </remarks>
        </member>
        <member name="M:Azure.AI.OpenAI.ImageGenerationOptions.#ctor(System.String)">
            <summary> Initializes a new instance of ImageGenerationOptions. </summary>
            <param name="prompt"> A description of the desired images. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="prompt" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.OpenAI.ImageGenerationOptions.#ctor(System.String,System.Nullable{System.Int32},System.Nullable{Azure.AI.OpenAI.ImageSize},System.Nullable{Azure.AI.OpenAI.ImageGenerationResponseFormat},System.String)">
            <summary> Initializes a new instance of ImageGenerationOptions. </summary>
            <param name="prompt"> A description of the desired images. </param>
            <param name="imageCount"> The number of images to generate (defaults to 1). </param>
            <param name="size"> The desired size of the generated images. Must be one of 256x256, 512x512, or 1024x1024 (defaults to 1024x1024). </param>
            <param name="responseFormat">
              The format in which image generation response items should be presented.
              Azure OpenAI only supports URL response items.
            </param>
            <param name="user"> A unique identifier representing your end-user, which can help to monitor and detect abuse. </param>
        </member>
        <member name="P:Azure.AI.OpenAI.ImageGenerationOptions.ImageCount">
            <summary> The number of images to generate (defaults to 1). </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.ImageGenerationOptions.Size">
            <summary> The desired size of the generated images. Must be one of 256x256, 512x512, or 1024x1024 (defaults to 1024x1024). </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.ImageGenerationOptions.User">
            <summary> A unique identifier representing your end-user, which can help to monitor and detect abuse. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.ImageGenerationOptions.ToRequestContent">
            <summary> Convert into a Utf8JsonRequestContent. </summary>
        </member>
        <member name="T:Azure.AI.OpenAI.ImageGenerationResponseFormat">
            <summary> The format in which the generated images are returned. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.ImageGenerationResponseFormat.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.OpenAI.ImageGenerationResponseFormat" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.AI.OpenAI.ImageGenerationResponseFormat.Url">
            <summary> Image generation response items should provide a URL from which the image may be retrieved. </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.ImageGenerationResponseFormat.Base64">
            <summary> Image generation response items should provide image data as a base64-encoded string. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.ImageGenerationResponseFormat.op_Equality(Azure.AI.OpenAI.ImageGenerationResponseFormat,Azure.AI.OpenAI.ImageGenerationResponseFormat)">
            <summary> Determines if two <see cref="T:Azure.AI.OpenAI.ImageGenerationResponseFormat" /> values are the same. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.ImageGenerationResponseFormat.op_Inequality(Azure.AI.OpenAI.ImageGenerationResponseFormat,Azure.AI.OpenAI.ImageGenerationResponseFormat)">
            <summary> Determines if two <see cref="T:Azure.AI.OpenAI.ImageGenerationResponseFormat" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.ImageGenerationResponseFormat.op_Implicit(System.String)~Azure.AI.OpenAI.ImageGenerationResponseFormat">
            <summary> Converts a string to a <see cref="T:Azure.AI.OpenAI.ImageGenerationResponseFormat" />. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.ImageGenerationResponseFormat.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.AI.OpenAI.ImageGenerationResponseFormat.Equals(Azure.AI.OpenAI.ImageGenerationResponseFormat)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.AI.OpenAI.ImageGenerationResponseFormat.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.AI.OpenAI.ImageGenerationResponseFormat.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.AI.OpenAI.ImageGenerations">
            <summary> The result of an image generation operation. </summary>
            <summary> The result of the operation if the operation succeeded. </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.ImageGenerations.Data">
            <summary>
                Gets a list of generated image items in the format specified for the request.
            </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.ImageGenerations.#ctor(System.DateTimeOffset,System.Collections.Generic.IEnumerable{Azure.AI.OpenAI.ImageLocation})">
            <summary> Initializes a new instance of ImageGenerations. </summary>
            <param name="created"> A timestamp when this job or item was created (in unix epochs). </param>
            <param name="data"> The images generated by the operator. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.OpenAI.ImageGenerations.#ctor(System.DateTimeOffset,System.Collections.Generic.IReadOnlyList{Azure.AI.OpenAI.ImageLocation})">
            <summary> Initializes a new instance of ImageGenerations. </summary>
            <param name="created"> A timestamp when this job or item was created (in unix epochs). </param>
            <param name="data"> The images generated by the operator. </param>
        </member>
        <member name="P:Azure.AI.OpenAI.ImageGenerations.Created">
            <summary> A timestamp when this job or item was created (in unix epochs). </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.ImageGenerations.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="T:Azure.AI.OpenAI.OpenAIClient">
            <summary> Azure OpenAI APIs for completions and search. </summary>
            <summary> Azure OpenAI APIs for completions and search. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.OpenAIClient.#ctor(System.Uri,Azure.AzureKeyCredential,Azure.AI.OpenAI.OpenAIClientOptions)">
            <summary>
                Initializes a instance of OpenAIClient for use with an Azure OpenAI resource.
            </summary>
             <param name="endpoint">
                The URI for an Azure OpenAI resource as retrieved from, for example, Azure Portal.
                This should include protocol and hostname. An example could be:
                https://my-resource.openai.azure.com .
            </param>
            <param name="keyCredential"> A key credential used to authenticate to an Azure OpenAI resource. </param>
            <param name="options"> The options for configuring the client. </param>
            <remarks>
                <see cref="T:Azure.AI.OpenAI.OpenAIClient" /> objects initialized with this constructor can only be used with Azure OpenAI
                resources. To use <see cref="T:Azure.AI.OpenAI.OpenAIClient" /> with the non-Azure OpenAI inference endpoint, use a
                constructor that accepts a non-Azure OpenAI API key, instead.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="endpoint" /> or <paramref name="keyCredential" /> is null.
            </exception>
        </member>
        <member name="M:Azure.AI.OpenAI.OpenAIClient.#ctor(System.Uri,Azure.AzureKeyCredential)">
            <summary>
                Initializes a instance of OpenAIClient for use with an Azure OpenAI resource.
            </summary>
             <param name="endpoint">
                The URI for an Azure OpenAI resource as retrieved from, for example, Azure Portal.
                This should include protocol and hostname. An example could be:
                https://my-resource.openai.azure.com .
            </param>
            <param name="keyCredential"> A key credential used to authenticate to an Azure OpenAI resource. </param>
            <remarks>
                <see cref="T:Azure.AI.OpenAI.OpenAIClient" /> objects initialized with this constructor can only be used with Azure OpenAI
                resources. To use <see cref="T:Azure.AI.OpenAI.OpenAIClient" /> with the non-Azure OpenAI inference endpoint, use a
                constructor that accepts a non-Azure OpenAI API key, instead.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="endpoint" /> or <paramref name="keyCredential" /> is null.
            </exception>
        </member>
        <member name="M:Azure.AI.OpenAI.OpenAIClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.AI.OpenAI.OpenAIClientOptions)">
            <summary>
                <summary>
                Initializes a instance of OpenAIClient for use with an Azure OpenAI resource.
            </summary>
            </summary>
            <param name="endpoint">
                <param name="endpoint">
                The URI for an Azure OpenAI resource as retrieved from, for example, Azure Portal.
                This should include protocol and hostname. An example could be:
                https://my-resource.openai.azure.com .
            </param>
            </param>
            <param name="options">
                <param name="options"> The options for configuring the client. </param>
            </param>
            <param name="tokenCredential"> A token credential used to authenticate with an Azure OpenAI resource. </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="endpoint" /> or <paramref name="tokenCredential" /> is null.
            </exception>
        </member>
        <member name="M:Azure.AI.OpenAI.OpenAIClient.#ctor(System.Uri,Azure.Core.TokenCredential)">
            <summary>
                <summary>
                Initializes a instance of OpenAIClient for use with an Azure OpenAI resource.
            </summary>
            </summary>
            <param name="endpoint">
                <param name="endpoint">
                The URI for an Azure OpenAI resource as retrieved from, for example, Azure Portal.
                This should include protocol and hostname. An example could be:
                https://my-resource.openai.azure.com .
            </param>
            </param>
            <param name="tokenCredential"> A token credential used to authenticate with an Azure OpenAI resource. </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="endpoint" /> or <paramref name="tokenCredential" /> is null.
            </exception>
        </member>
        <member name="M:Azure.AI.OpenAI.OpenAIClient.#ctor(System.String,Azure.AI.OpenAI.OpenAIClientOptions)">
            <summary>
                Initializes a instance of OpenAIClient for use with the non-Azure OpenAI endpoint.
            </summary>
            <param name="openAIApiKey">
                The API key to use when connecting to the non-Azure OpenAI endpoint.
            </param>
            <param name="options"> The options for configuring the client. </param>
            <remarks>
                <see cref="T:Azure.AI.OpenAI.OpenAIClient" /> objects initialized with this constructor can only be used with the
                non-Azure OpenAI inference endpoint. To use <see cref="T:Azure.AI.OpenAI.OpenAIClient" /> with an Azure OpenAI resource,
                use a constructor that accepts a resource URI and Azure authentication credential, instead.
            </remarks>
            <exception cref="T:System.ArgumentNullException"> <paramref name="openAIApiKey" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.OpenAI.OpenAIClient.#ctor(System.String)">
            <summary>
                Initializes a instance of OpenAIClient for use with the non-Azure OpenAI endpoint.
            </summary>
            <param name="openAIApiKey">
                The API key to use when connecting to the non-Azure OpenAI endpoint.
            </param>
            <remarks>
                <see cref="T:Azure.AI.OpenAI.OpenAIClient" /> objects initialized with this constructor can only be used with the
                non-Azure OpenAI inference endpoint. To use <see cref="T:Azure.AI.OpenAI.OpenAIClient" /> with an Azure OpenAI resource,
                use a constructor that accepts a resource URI and Azure authentication credential, instead.
            </remarks>
            <exception cref="T:System.ArgumentNullException"> <paramref name="openAIApiKey" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.OpenAI.OpenAIClient.GetCompletions(System.String,Azure.AI.OpenAI.CompletionsOptions,System.Threading.CancellationToken)">
            <summary> Return textual completions as configured for a given prompt. </summary>
            <param name="deploymentOrModelName">
                Specifies either the model deployment name (when using Azure OpenAI) or model name (when using
                non-Azure OpenAI) to use for this request.
            </param>
            <param name="completionsOptions">
                The options for this completions request.
            </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="deploymentOrModelName" /> or <paramref name="completionsOptions" /> is null.
            </exception>
        </member>
        <member name="M:Azure.AI.OpenAI.OpenAIClient.GetCompletions(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Return textual completions as configured for a given prompt. </summary>
            <param name="deploymentOrModelName">
                Specifies either the model deployment name (when using Azure OpenAI) or model name (when using
                non-Azure OpenAI) to use for this request.
            </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="deploymentOrModelName" /> or <paramref name="completionsOptions" /> is null.
            </exception>
        </member>
        <member name="M:Azure.AI.OpenAI.OpenAIClient.GetCompletionsAsync(System.String,Azure.AI.OpenAI.CompletionsOptions,System.Threading.CancellationToken)">
            <summary> Return textual completions as configured for a given prompt. </summary>
            <param name="deploymentOrModelName">
                Specifies either the model deployment name (when using Azure OpenAI) or model name (when using
                non-Azure OpenAI) to use for this request.
            </param>
            <param name="completionsOptions">
                The options for this completions request.
            </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="deploymentOrModelName" /> or <paramref name="completionsOptions" /> is null.
            </exception>
        </member>
        <member name="M:Azure.AI.OpenAI.OpenAIClient.GetCompletionsAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Return textual completions as configured for a given prompt. </summary>
            <param name="deploymentOrModelName">
                Specifies either the model deployment name (when using Azure OpenAI) or model name (when using
                non-Azure OpenAI) to use for this request.
            </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="deploymentOrModelName" /> or <paramref name="completionsOptions" /> is null.
            </exception>
        </member>
        <member name="M:Azure.AI.OpenAI.OpenAIClient.GetCompletionsStreaming(System.String,Azure.AI.OpenAI.CompletionsOptions,System.Threading.CancellationToken)">
            <summary>
                Begin a completions request and get an object that can stream response data as it becomes available.
            </summary>
            <param name="deploymentOrModelName">
                <param name="deploymentOrModelName">
                Specifies either the model deployment name (when using Azure OpenAI) or model name (when using
                non-Azure OpenAI) to use for this request.
            </param>
            </param>
            <param name="completionsOptions"> the chat completions options for this completions request. </param>
            <param name="cancellationToken">
                a cancellation token that can be used to cancel the initial request or ongoing streaming operation.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="deploymentOrModelName" /> or <paramref name="completionsOptions" /> is null.
            </exception>
            <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
            <returns>
            A response that, if the request was successful, includes a <see cref="T:Azure.AI.OpenAI.StreamingCompletions" /> instance.
            </returns>
        </member>
        <member name="M:Azure.AI.OpenAI.OpenAIClient.GetCompletionsStreamingAsync(System.String,Azure.AI.OpenAI.CompletionsOptions,System.Threading.CancellationToken)">
            <summary>
                Begin a completions request and get an object that can stream response data as it becomes available.
            </summary>
            <param name="deploymentOrModelName">
                <param name="deploymentOrModelName">
                Specifies either the model deployment name (when using Azure OpenAI) or model name (when using
                non-Azure OpenAI) to use for this request.
            </param>
            </param>
            <param name="completionsOptions"> the chat completions options for this completions request. </param>
            <param name="cancellationToken">
                a cancellation token that can be used to cancel the initial request or ongoing streaming operation.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="deploymentOrModelName" /> or <paramref name="completionsOptions" /> is null.
            </exception>
            <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
            <returns>
            A response that, if the request was successful, includes a <see cref="T:Azure.AI.OpenAI.StreamingCompletions" /> instance.
            </returns>
        </member>
        <member name="M:Azure.AI.OpenAI.OpenAIClient.GetChatCompletions(System.String,Azure.AI.OpenAI.ChatCompletionsOptions,System.Threading.CancellationToken)">
            <summary> Get chat completions for provided chat context messages. </summary>
            <param name="deploymentOrModelName">
            <param name="deploymentOrModelName">
                Specifies either the model deployment name (when using Azure OpenAI) or model name (when using
                non-Azure OpenAI) to use for this request.
            </param>
            </param>
            <param name="chatCompletionsOptions"> The options for this chat completions request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="deploymentOrModelName" /> or <paramref name="chatCompletionsOptions" /> is null.
            </exception>
        </member>
        <member name="M:Azure.AI.OpenAI.OpenAIClient.GetChatCompletionsAsync(System.String,Azure.AI.OpenAI.ChatCompletionsOptions,System.Threading.CancellationToken)">
            <summary> Get chat completions for provided chat context messages. </summary>
            <param name="deploymentOrModelName">
            <param name="deploymentOrModelName">
                Specifies either the model deployment name (when using Azure OpenAI) or model name (when using
                non-Azure OpenAI) to use for this request.
            </param>
            </param>
            <param name="chatCompletionsOptions"> The options for this chat completions request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="deploymentOrModelName" /> or <paramref name="chatCompletionsOptions" /> is null.
            </exception>
        </member>
        <member name="M:Azure.AI.OpenAI.OpenAIClient.GetChatCompletionsStreaming(System.String,Azure.AI.OpenAI.ChatCompletionsOptions,System.Threading.CancellationToken)">
            <summary>
                Begin a chat completions request and get an object that can stream response data as it becomes
                available.
            </summary>
            <param name="deploymentOrModelName">
                <param name="deploymentOrModelName">
                Specifies either the model deployment name (when using Azure OpenAI) or model name (when using
                non-Azure OpenAI) to use for this request.
            </param>
            </param>
            <param name="chatCompletionsOptions">
                the chat completions options for this chat completions request.
            </param>
            <param name="cancellationToken">
                a cancellation token that can be used to cancel the initial request or ongoing streaming operation.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="deploymentOrModelName" /> or <paramref name="chatCompletionsOptions" /> is null.
            </exception>
            <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:Azure.AI.OpenAI.OpenAIClient.GetChatCompletionsStreamingAsync(System.String,Azure.AI.OpenAI.ChatCompletionsOptions,System.Threading.CancellationToken)">
            <summary>
                Begin a chat completions request and get an object that can stream response data as it becomes
                available.
            </summary>
            <param name="deploymentOrModelName">
                <param name="deploymentOrModelName">
                Specifies either the model deployment name (when using Azure OpenAI) or model name (when using
                non-Azure OpenAI) to use for this request.
            </param>
            </param>
            <param name="chatCompletionsOptions">
                the chat completions options for this chat completions request.
            </param>
            <param name="cancellationToken">
                a cancellation token that can be used to cancel the initial request or ongoing streaming operation.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="deploymentOrModelName" /> or <paramref name="chatCompletionsOptions" /> is null.
            </exception>
            <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:Azure.AI.OpenAI.OpenAIClient.GetEmbeddings(System.String,Azure.AI.OpenAI.EmbeddingsOptions,System.Threading.CancellationToken)">
            <summary> Return the computed embeddings for a given prompt. </summary>
            <param name="deploymentOrModelName">
                <param name="deploymentOrModelName">
                Specifies either the model deployment name (when using Azure OpenAI) or model name (when using
                non-Azure OpenAI) to use for this request.
            </param>
            </param>
            <param name="embeddingsOptions"> The options for this embeddings request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="deploymentOrModelName" /> or <paramref name="embeddingsOptions" /> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="deploymentOrModelName" /> is an empty string and was expected to be non-empty.
            </exception>
        </member>
        <member name="M:Azure.AI.OpenAI.OpenAIClient.GetEmbeddingsAsync(System.String,Azure.AI.OpenAI.EmbeddingsOptions,System.Threading.CancellationToken)">
            <summary> Return the computed embeddings for a given prompt. </summary>
            <param name="deploymentOrModelName">
                <param name="deploymentOrModelName">
                Specifies either the model deployment name (when using Azure OpenAI) or model name (when using
                non-Azure OpenAI) to use for this request.
            </param>
            </param>
            <param name="embeddingsOptions"> The options for this embeddings request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="deploymentOrModelName" /> or <paramref name="embeddingsOptions" /> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="deploymentOrModelName" /> is an empty string and was expected to be non-empty.
            </exception>
        </member>
        <member name="M:Azure.AI.OpenAI.OpenAIClient.GetImageGenerations(Azure.AI.OpenAI.ImageGenerationOptions,System.Threading.CancellationToken)">
            <summary>
                Get a set of generated images influenced by a provided textual prompt.
            </summary>
            <param name="imageGenerationOptions">
                The configuration information for the image generation request that controls the content,
                size, and other details about generated images.
            </param>
            <param name="cancellationToken">
                An optional cancellation token that may be used to abort an ongoing request.
            </param>
            <returns>
                The response information for the image generations request.
            </returns>
        </member>
        <member name="M:Azure.AI.OpenAI.OpenAIClient.GetImageGenerationsAsync(Azure.AI.OpenAI.ImageGenerationOptions,System.Threading.CancellationToken)">
            <summary>
                Get a set of generated images influenced by a provided textual prompt.
            </summary>
            <param name="imageGenerationOptions">
                The configuration information for the image generation request that controls the content,
                size, and other details about generated images.
            </param>
            <param name="cancellationToken">
                An optional cancellation token that may be used to abort an ongoing request.
            </param>
            <returns>
                The response information for the image generations request.
            </returns>
        </member>
        <member name="P:Azure.AI.OpenAI.OpenAIClient.ClientDiagnostics">
            <summary> The ClientDiagnostics is used to provide tracing support for the client library. </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.OpenAIClient.Pipeline">
            <summary> The HTTP pipeline for sending and receiving REST requests and responses. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.OpenAIClient.#ctor">
            <summary> Initializes a new instance of OpenAIClient for mocking. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.OpenAIClient.BeginAzureBatchImageGenerationAsync(Azure.WaitUntil,Azure.AI.OpenAI.ImageGenerationOptions,System.Threading.CancellationToken)">
            <summary> Starts the generation of a batch of images from a text caption. </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="imageGenerationOptions"> Represents the request data used to generate images. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="imageGenerationOptions" /> is null. </exception>
            <!-- No matching elements were found for the following include tag --><include file="Docs/OpenAIClient.xml" path="doc/members/member[@name='BeginAzureBatchImageGenerationAsync(WaitUntil,ImageGenerationOptions,CancellationToken)']/*" />
        </member>
        <member name="M:Azure.AI.OpenAI.OpenAIClient.BeginAzureBatchImageGeneration(Azure.WaitUntil,Azure.AI.OpenAI.ImageGenerationOptions,System.Threading.CancellationToken)">
            <summary> Starts the generation of a batch of images from a text caption. </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="imageGenerationOptions"> Represents the request data used to generate images. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="imageGenerationOptions" /> is null. </exception>
            <!-- No matching elements were found for the following include tag --><include file="Docs/OpenAIClient.xml" path="doc/members/member[@name='BeginAzureBatchImageGeneration(WaitUntil,ImageGenerationOptions,CancellationToken)']/*" />
        </member>
        <member name="M:Azure.AI.OpenAI.OpenAIClient.BeginAzureBatchImageGenerationAsync(Azure.WaitUntil,Azure.Core.RequestContent,Azure.RequestContext)">
            <summary>
            [Protocol Method] Starts the generation of a batch of images from a text caption
            <list type="bullet">
            <item>
            <description>
            This <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/ProtocolMethods.md">protocol method</see> allows explicit creation of the request and processing of the response for advanced scenarios.
            </description>
            </item>
            <item>
            <description>
            Please try the simpler <see cref="M:Azure.AI.OpenAI.OpenAIClient.BeginAzureBatchImageGenerationAsync(Azure.WaitUntil,Azure.AI.OpenAI.ImageGenerationOptions,System.Threading.CancellationToken)" /> convenience overload with strongly typed models first.
            </description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="content"> The content to send as the body of the request. </param>
            <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content" /> is null. </exception>
            <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
            <returns> The <see cref="T:Azure.Operation" /> representing an asynchronous operation on the service. </returns>
            <!-- No matching elements were found for the following include tag --><include file="Docs/OpenAIClient.xml" path="doc/members/member[@name='BeginAzureBatchImageGenerationAsync(WaitUntil,RequestContent,RequestContext)']/*" />
        </member>
        <member name="M:Azure.AI.OpenAI.OpenAIClient.BeginAzureBatchImageGeneration(Azure.WaitUntil,Azure.Core.RequestContent,Azure.RequestContext)">
            <summary>
            [Protocol Method] Starts the generation of a batch of images from a text caption
            <list type="bullet">
            <item>
            <description>
            This <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/ProtocolMethods.md">protocol method</see> allows explicit creation of the request and processing of the response for advanced scenarios.
            </description>
            </item>
            <item>
            <description>
            Please try the simpler <see cref="M:Azure.AI.OpenAI.OpenAIClient.BeginAzureBatchImageGeneration(Azure.WaitUntil,Azure.AI.OpenAI.ImageGenerationOptions,System.Threading.CancellationToken)" /> convenience overload with strongly typed models first.
            </description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="content"> The content to send as the body of the request. </param>
            <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content" /> is null. </exception>
            <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
            <returns> The <see cref="T:Azure.Operation" /> representing an asynchronous operation on the service. </returns>
            <!-- No matching elements were found for the following include tag --><include file="Docs/OpenAIClient.xml" path="doc/members/member[@name='BeginAzureBatchImageGeneration(WaitUntil,RequestContent,RequestContext)']/*" />
        </member>
        <member name="P:Azure.AI.OpenAI.StreamingChatChoice.Index">
            <summary>
            Gets the response index associated with this StreamingChoice as represented relative to other Choices
            in the same Completions response.
            </summary>
            <remarks>
            Indices may be used to correlate individual Choices within a Completions result to their configured
            prompts as provided in the request. As an example, if two Choices are requested for each of four prompts,
            the Choices with indices 0 and 1 will correspond to the first prompt, 2 and 3 to the second, and so on.
            </remarks>
        </member>
        <member name="P:Azure.AI.OpenAI.StreamingChatChoice.FinishReason">
            <summary>
            Gets a value representing why response generation ended when producing this StreamingChoice.
            </summary>
            <remarks>
            Normal termination typically provides "stop" and encountering token limits in a request typically
            provides "length." If no value is present, this StreamingChoice is still in progress.
            </remarks>
        </member>
        <member name="M:Azure.AI.OpenAI.StreamingChatChoice.GetMessageStreaming(System.Threading.CancellationToken)">
            <summary>
            Gets an asynchronous enumeration that will retrieve the Completion text associated with this Choice as it
            becomes available. Each string will provide one or more tokens, including whitespace, and a full
            concatenation of all enumerated strings is functionally equivalent to the single Text property on a
            non-streaming Completions Choice.
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="P:Azure.AI.OpenAI.StreamingChatCompletions.Created">
            <summary>
            Gets the earliest Completion creation timestamp associated with this streamed response.
            </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.StreamingChatCompletions.Id">
            <summary>
            Gets the unique identifier associated with this streaming Completions response.
            </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.StreamingChoice.Index">
            <summary>
            Gets the response index associated with this StreamingChoice as represented relative to other Choices
            in the same Completions response.
            </summary>
            <remarks>
            Indices may be used to correlate individual Choices within a Completions result to their configured
            prompts as provided in the request. As an example, if two Choices are requested for each of four prompts,
            the Choices with indices 0 and 1 will correspond to the first prompt, 2 and 3 to the second, and so on.
            </remarks>
        </member>
        <member name="P:Azure.AI.OpenAI.StreamingChoice.FinishReason">
            <summary>
            Gets a value representing why response generation ended when producing this StreamingChoice.
            </summary>
            <remarks>
            Normal termination typically provides "stop" and encountering token limits in a request typically
            provides "length." If no value is present, this StreamingChoice is still in progress.
            </remarks>
        </member>
        <member name="P:Azure.AI.OpenAI.StreamingChoice.LogProbabilityModel">
            <summary>
            Gets the log probabilities associated with tokens in this Choice.
            </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.StreamingChoice.GetTextStreaming(System.Threading.CancellationToken)">
            <summary>
            Gets an asynchronous enumeration that will retrieve the Completion text associated with this Choice as it
            becomes available. Each string will provide one or more tokens, including whitespace, and a full
            concatenation of all enumerated strings is functionally equivalent to the single Text property on a
            non-streaming Completions Choice.
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="P:Azure.AI.OpenAI.StreamingCompletions.Created">
            <summary>
            Gets the earliest Completion creation timestamp associated with this streamed response.
            </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.StreamingCompletions.Id">
            <summary>
            Gets the unique identifier associated with this streaming Completions response.
            </summary>
        </member>
        <member name="T:Azure.AI.OpenAI.AzureOpenAIOperationState">
            <summary> The state of a job or item. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.AzureOpenAIOperationState.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.OpenAI.AzureOpenAIOperationState" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.AI.OpenAI.AzureOpenAIOperationState.NotRunning">
            <summary> The operation was created and is queued to be processed in the future. </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.AzureOpenAIOperationState.Running">
            <summary> The operation has started to be processed. </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.AzureOpenAIOperationState.Succeeded">
            <summary> The operation has successfully be processed and is ready for consumption. </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.AzureOpenAIOperationState.Canceled">
            <summary> The operation has been canceled and is incomplete. </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.AzureOpenAIOperationState.Failed">
            <summary> The operation has completed processing with a failure and cannot be further consumed. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.AzureOpenAIOperationState.op_Equality(Azure.AI.OpenAI.AzureOpenAIOperationState,Azure.AI.OpenAI.AzureOpenAIOperationState)">
            <summary> Determines if two <see cref="T:Azure.AI.OpenAI.AzureOpenAIOperationState" /> values are the same. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.AzureOpenAIOperationState.op_Inequality(Azure.AI.OpenAI.AzureOpenAIOperationState,Azure.AI.OpenAI.AzureOpenAIOperationState)">
            <summary> Determines if two <see cref="T:Azure.AI.OpenAI.AzureOpenAIOperationState" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.AzureOpenAIOperationState.op_Implicit(System.String)~Azure.AI.OpenAI.AzureOpenAIOperationState">
            <summary> Converts a string to a <see cref="T:Azure.AI.OpenAI.AzureOpenAIOperationState" />. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.AzureOpenAIOperationState.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.AI.OpenAI.AzureOpenAIOperationState.Equals(Azure.AI.OpenAI.AzureOpenAIOperationState)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.AI.OpenAI.AzureOpenAIOperationState.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.AI.OpenAI.AzureOpenAIOperationState.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.AI.OpenAI.BatchImageGenerationOperationResponse">
            <summary> A polling status update or final response payload for an image operation. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.BatchImageGenerationOperationResponse.#ctor(System.String,System.DateTimeOffset,Azure.AI.OpenAI.AzureOpenAIOperationState)">
            <summary> Initializes a new instance of BatchImageGenerationOperationResponse. </summary>
            <param name="id"> The ID of the operation. </param>
            <param name="created"> A timestamp when this job or item was created (in unix epochs). </param>
            <param name="status"> The status of the operation. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="id" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.OpenAI.BatchImageGenerationOperationResponse.#ctor(System.String,System.DateTimeOffset,System.Nullable{System.Int64},Azure.AI.OpenAI.ImageGenerations,Azure.AI.OpenAI.AzureOpenAIOperationState,Azure.ResponseError)">
            <summary> Initializes a new instance of BatchImageGenerationOperationResponse. </summary>
            <param name="id"> The ID of the operation. </param>
            <param name="created"> A timestamp when this job or item was created (in unix epochs). </param>
            <param name="expires"> A timestamp when this operation and its associated images expire and will be deleted (in unix epochs). </param>
            <param name="result"> The result of the operation if the operation succeeded. </param>
            <param name="status"> The status of the operation. </param>
            <param name="error"> The error if the operation failed. </param>
        </member>
        <member name="P:Azure.AI.OpenAI.BatchImageGenerationOperationResponse.Id">
            <summary> The ID of the operation. </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.BatchImageGenerationOperationResponse.Created">
            <summary> A timestamp when this job or item was created (in unix epochs). </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.BatchImageGenerationOperationResponse.Expires">
            <summary> A timestamp when this operation and its associated images expire and will be deleted (in unix epochs). </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.BatchImageGenerationOperationResponse.Result">
            <summary> The result of the operation if the operation succeeded. </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.BatchImageGenerationOperationResponse.Status">
            <summary> The status of the operation. </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.BatchImageGenerationOperationResponse.Error">
            <summary> The error if the operation failed. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.BatchImageGenerationOperationResponse.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="T:Azure.AI.OpenAI.ChatCompletions">
            <summary>
            Representation of the response data from a chat completions request.
            Completions support a wide variety of tasks and generate text that continues from or "completes"
            provided prompt data.
            </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.ChatCompletions.#ctor(System.String,System.DateTimeOffset,System.Collections.Generic.IEnumerable{Azure.AI.OpenAI.ChatChoice},Azure.AI.OpenAI.CompletionsUsage)">
            <summary> Initializes a new instance of ChatCompletions. </summary>
            <param name="id"> A unique identifier associated with this chat completions response. </param>
            <param name="created">
            The first timestamp associated with generation activity for this completions response,
            represented as seconds since the beginning of the Unix epoch of 00:00 on 1 Jan 1970.
            </param>
            <param name="choices">
            The collection of completions choices associated with this completions response.
            Generally, `n` choices are generated per provided prompt with a default value of 1.
            Token limits and other settings may limit the number of choices generated.
            </param>
            <param name="usage"> Usage information for tokens processed and generated as part of this completions operation. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="id" />, <paramref name="choices" /> or <paramref name="usage" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.OpenAI.ChatCompletions.#ctor(System.String,System.DateTimeOffset,System.Collections.Generic.IReadOnlyList{Azure.AI.OpenAI.ChatChoice},System.Collections.Generic.IReadOnlyList{Azure.AI.OpenAI.PromptFilterResult},Azure.AI.OpenAI.CompletionsUsage)">
            <summary> Initializes a new instance of ChatCompletions. </summary>
            <param name="id"> A unique identifier associated with this chat completions response. </param>
            <param name="created">
            The first timestamp associated with generation activity for this completions response,
            represented as seconds since the beginning of the Unix epoch of 00:00 on 1 Jan 1970.
            </param>
            <param name="choices">
            The collection of completions choices associated with this completions response.
            Generally, `n` choices are generated per provided prompt with a default value of 1.
            Token limits and other settings may limit the number of choices generated.
            </param>
            <param name="promptFilterResults">
            Content filtering results for zero or more prompts in the request. In a streaming request,
            results for different prompts may arrive at different times or in different orders.
            </param>
            <param name="usage"> Usage information for tokens processed and generated as part of this completions operation. </param>
        </member>
        <member name="P:Azure.AI.OpenAI.ChatCompletions.Id">
            <summary> A unique identifier associated with this chat completions response. </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.ChatCompletions.Created">
            <summary>
            The first timestamp associated with generation activity for this completions response,
            represented as seconds since the beginning of the Unix epoch of 00:00 on 1 Jan 1970.
            </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.ChatCompletions.Choices">
            <summary>
            The collection of completions choices associated with this completions response.
            Generally, `n` choices are generated per provided prompt with a default value of 1.
            Token limits and other settings may limit the number of choices generated.
            </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.ChatCompletions.PromptFilterResults">
            <summary>
            Content filtering results for zero or more prompts in the request. In a streaming request,
            results for different prompts may arrive at different times or in different orders.
            </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.ChatCompletions.Usage">
            <summary> Usage information for tokens processed and generated as part of this completions operation. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.ChatCompletions.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="T:Azure.AI.OpenAI.ChatRole">
            <summary> A description of the intended purpose of a message within a chat completions interaction. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.ChatRole.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.OpenAI.ChatRole" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.AI.OpenAI.ChatRole.System">
            <summary> The role that instructs or sets the behavior of the assistant. </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.ChatRole.Assistant">
            <summary> The role that provides responses to system-instructed, user-prompted input. </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.ChatRole.User">
            <summary> The role that provides input for chat completions. </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.ChatRole.Function">
            <summary> The role that provides function results for char completions. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.ChatRole.op_Equality(Azure.AI.OpenAI.ChatRole,Azure.AI.OpenAI.ChatRole)">
            <summary> Determines if two <see cref="T:Azure.AI.OpenAI.ChatRole" /> values are the same. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.ChatRole.op_Inequality(Azure.AI.OpenAI.ChatRole,Azure.AI.OpenAI.ChatRole)">
            <summary> Determines if two <see cref="T:Azure.AI.OpenAI.ChatRole" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.ChatRole.op_Implicit(System.String)~Azure.AI.OpenAI.ChatRole">
            <summary> Converts a string to a <see cref="T:Azure.AI.OpenAI.ChatRole" />. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.ChatRole.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.AI.OpenAI.ChatRole.Equals(Azure.AI.OpenAI.ChatRole)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.AI.OpenAI.ChatRole.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.AI.OpenAI.ChatRole.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.AI.OpenAI.Completions">
            <summary>
            Representation of the response data from a completions request.
            Completions support a wide variety of tasks and generate text that continues from or "completes"
            provided prompt data.
            </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.Completions.#ctor(System.String,System.DateTimeOffset,System.Collections.Generic.IEnumerable{Azure.AI.OpenAI.Choice},Azure.AI.OpenAI.CompletionsUsage)">
            <summary> Initializes a new instance of Completions. </summary>
            <param name="id"> A unique identifier associated with this completions response. </param>
            <param name="created">
            The first timestamp associated with generation activity for this completions response,
            represented as seconds since the beginning of the Unix epoch of 00:00 on 1 Jan 1970.
            </param>
            <param name="choices">
            The collection of completions choices associated with this completions response.
            Generally, `n` choices are generated per provided prompt with a default value of 1.
            Token limits and other settings may limit the number of choices generated.
            </param>
            <param name="usage"> Usage information for tokens processed and generated as part of this completions operation. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="id" />, <paramref name="choices" /> or <paramref name="usage" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.OpenAI.Completions.#ctor(System.String,System.DateTimeOffset,System.Collections.Generic.IReadOnlyList{Azure.AI.OpenAI.PromptFilterResult},System.Collections.Generic.IReadOnlyList{Azure.AI.OpenAI.Choice},Azure.AI.OpenAI.CompletionsUsage)">
            <summary> Initializes a new instance of Completions. </summary>
            <param name="id"> A unique identifier associated with this completions response. </param>
            <param name="created">
            The first timestamp associated with generation activity for this completions response,
            represented as seconds since the beginning of the Unix epoch of 00:00 on 1 Jan 1970.
            </param>
            <param name="promptFilterResults">
            Content filtering results for zero or more prompts in the request. In a streaming request,
            results for different prompts may arrive at different times or in different orders.
            </param>
            <param name="choices">
            The collection of completions choices associated with this completions response.
            Generally, `n` choices are generated per provided prompt with a default value of 1.
            Token limits and other settings may limit the number of choices generated.
            </param>
            <param name="usage"> Usage information for tokens processed and generated as part of this completions operation. </param>
        </member>
        <member name="P:Azure.AI.OpenAI.Completions.Id">
            <summary> A unique identifier associated with this completions response. </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.Completions.Created">
            <summary>
            The first timestamp associated with generation activity for this completions response,
            represented as seconds since the beginning of the Unix epoch of 00:00 on 1 Jan 1970.
            </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.Completions.PromptFilterResults">
            <summary>
            Content filtering results for zero or more prompts in the request. In a streaming request,
            results for different prompts may arrive at different times or in different orders.
            </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.Completions.Choices">
            <summary>
            The collection of completions choices associated with this completions response.
            Generally, `n` choices are generated per provided prompt with a default value of 1.
            Token limits and other settings may limit the number of choices generated.
            </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.Completions.Usage">
            <summary> Usage information for tokens processed and generated as part of this completions operation. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.Completions.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="T:Azure.AI.OpenAI.CompletionsLogProbabilityModel">
            <summary> Representation of a log probabilities model for a completions generation. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.CompletionsLogProbabilityModel.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.Nullable{System.Single}},System.Collections.Generic.IEnumerable{System.Collections.Generic.IDictionary{System.String,System.Nullable{System.Single}}},System.Collections.Generic.IEnumerable{System.Int32})">
            <summary> Initializes a new instance of CompletionsLogProbabilityModel. </summary>
            <param name="tokens"> The textual forms of tokens evaluated in this probability model. </param>
            <param name="tokenLogProbabilities"> A collection of log probability values for the tokens in this completions data. </param>
            <param name="topLogProbabilities"> A mapping of tokens to maximum log probability values in this completions data. </param>
            <param name="textOffsets"> The text offsets associated with tokens in this completions data. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="tokens" />, <paramref name="tokenLogProbabilities" />, <paramref name="topLogProbabilities" /> or <paramref name="textOffsets" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.OpenAI.CompletionsLogProbabilityModel.#ctor(System.Collections.Generic.IReadOnlyList{System.String},System.Collections.Generic.IReadOnlyList{System.Nullable{System.Single}},System.Collections.Generic.IReadOnlyList{System.Collections.Generic.IDictionary{System.String,System.Nullable{System.Single}}},System.Collections.Generic.IReadOnlyList{System.Int32})">
            <summary> Initializes a new instance of CompletionsLogProbabilityModel. </summary>
            <param name="tokens"> The textual forms of tokens evaluated in this probability model. </param>
            <param name="tokenLogProbabilities"> A collection of log probability values for the tokens in this completions data. </param>
            <param name="topLogProbabilities"> A mapping of tokens to maximum log probability values in this completions data. </param>
            <param name="textOffsets"> The text offsets associated with tokens in this completions data. </param>
        </member>
        <member name="P:Azure.AI.OpenAI.CompletionsLogProbabilityModel.Tokens">
            <summary> The textual forms of tokens evaluated in this probability model. </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.CompletionsLogProbabilityModel.TokenLogProbabilities">
            <summary> A collection of log probability values for the tokens in this completions data. </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.CompletionsLogProbabilityModel.TopLogProbabilities">
            <summary> A mapping of tokens to maximum log probability values in this completions data. </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.CompletionsLogProbabilityModel.TextOffsets">
            <summary> The text offsets associated with tokens in this completions data. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.CompletionsLogProbabilityModel.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="T:Azure.AI.OpenAI.CompletionsUsage">
            <summary>
            Representation of the token counts processed for a completions request.
            Counts consider all tokens across prompts, choices, choice alternates, best_of generations, and
            other consumers.
            </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.CompletionsUsage.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary> Initializes a new instance of CompletionsUsage. </summary>
            <param name="completionTokens"> The number of tokens generated across all completions emissions. </param>
            <param name="promptTokens"> The number of tokens in the provided prompts for the completions request. </param>
            <param name="totalTokens"> The total number of tokens processed for the completions request and response. </param>
        </member>
        <member name="P:Azure.AI.OpenAI.CompletionsUsage.CompletionTokens">
            <summary> The number of tokens generated across all completions emissions. </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.CompletionsUsage.PromptTokens">
            <summary> The number of tokens in the provided prompts for the completions request. </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.CompletionsUsage.TotalTokens">
            <summary> The total number of tokens processed for the completions request and response. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.CompletionsUsage.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="T:Azure.AI.OpenAI.ContentFilterResult">
            <summary> Information about filtered content severity level and if it has been filtered or not. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.ContentFilterResult.#ctor(Azure.AI.OpenAI.ContentFilterSeverity,System.Boolean)">
            <summary> Initializes a new instance of ContentFilterResult. </summary>
            <param name="severity"> Ratings for the intensity and risk level of filtered content. </param>
            <param name="filtered"> A value indicating whether or not the content has been filtered. </param>
        </member>
        <member name="P:Azure.AI.OpenAI.ContentFilterResult.Severity">
            <summary> Ratings for the intensity and risk level of filtered content. </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.ContentFilterResult.Filtered">
            <summary> A value indicating whether or not the content has been filtered. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.ContentFilterResult.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="T:Azure.AI.OpenAI.ContentFilterResults">
            <summary> Information about the content filtering category, if it has been detected. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.ContentFilterResults.#ctor">
            <summary> Initializes a new instance of ContentFilterResults. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.ContentFilterResults.#ctor(Azure.AI.OpenAI.ContentFilterResult,Azure.AI.OpenAI.ContentFilterResult,Azure.AI.OpenAI.ContentFilterResult,Azure.AI.OpenAI.ContentFilterResult)">
            <summary> Initializes a new instance of ContentFilterResults. </summary>
            <param name="sexual">
            Describes language related to anatomical organs and genitals, romantic relationships,
             acts portrayed in erotic or affectionate terms, physical sexual acts, including
             those portrayed as an assault or a forced sexual violent act against one’s will,
             prostitution, pornography, and abuse.
            </param>
            <param name="violence">
            Describes language related to physical actions intended to hurt, injure, damage, or
            kill someone or something; describes weapons, etc.
            </param>
            <param name="hate">
            Describes language attacks or uses that include pejorative or discriminatory language
            with reference to a person or identity group on the basis of certain differentiating
            attributes of these groups including but not limited to race, ethnicity, nationality,
            gender identity and expression, sexual orientation, religion, immigration status, ability
            status, personal appearance, and body size.
            </param>
            <param name="selfHarm">
            Describes language related to physical actions intended to purposely hurt, injure,
            or damage one’s body, or kill oneself.
            </param>
        </member>
        <member name="P:Azure.AI.OpenAI.ContentFilterResults.Sexual">
            <summary>
            Describes language related to anatomical organs and genitals, romantic relationships,
             acts portrayed in erotic or affectionate terms, physical sexual acts, including
             those portrayed as an assault or a forced sexual violent act against one’s will,
             prostitution, pornography, and abuse.
            </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.ContentFilterResults.Violence">
            <summary>
            Describes language related to physical actions intended to hurt, injure, damage, or
            kill someone or something; describes weapons, etc.
            </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.ContentFilterResults.Hate">
            <summary>
            Describes language attacks or uses that include pejorative or discriminatory language
            with reference to a person or identity group on the basis of certain differentiating
            attributes of these groups including but not limited to race, ethnicity, nationality,
            gender identity and expression, sexual orientation, religion, immigration status, ability
            status, personal appearance, and body size.
            </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.ContentFilterResults.SelfHarm">
            <summary>
            Describes language related to physical actions intended to purposely hurt, injure,
            or damage one’s body, or kill oneself.
            </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.ContentFilterResults.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="T:Azure.AI.OpenAI.ContentFilterSeverity">
            <summary> Ratings for the intensity and risk level of harmful content. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.ContentFilterSeverity.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.OpenAI.ContentFilterSeverity" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.AI.OpenAI.ContentFilterSeverity.Safe">
            <summary>
            Content may be related to violence, self-harm, sexual, or hate categories but the terms
            are used in general, journalistic, scientific, medical, and similar professional contexts,
            which are appropriate for most audiences.
            </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.ContentFilterSeverity.Low">
            <summary>
            Content that expresses prejudiced, judgmental, or opinionated views, includes offensive
            use of language, stereotyping, use cases exploring a fictional world (for example, gaming,
            literature) and depictions at low intensity.
            </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.ContentFilterSeverity.Medium">
            <summary>
            Content that uses offensive, insulting, mocking, intimidating, or demeaning language
            towards specific identity groups, includes depictions of seeking and executing harmful
            instructions, fantasies, glorification, promotion of harm at medium intensity.
            </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.ContentFilterSeverity.High">
            <summary>
            Content that displays explicit and severe harmful instructions, actions,
            damage, or abuse; includes endorsement, glorification, or promotion of severe
            harmful acts, extreme or illegal forms of harm, radicalization, or non-consensual
            power exchange or abuse.
            </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.ContentFilterSeverity.op_Equality(Azure.AI.OpenAI.ContentFilterSeverity,Azure.AI.OpenAI.ContentFilterSeverity)">
            <summary> Determines if two <see cref="T:Azure.AI.OpenAI.ContentFilterSeverity" /> values are the same. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.ContentFilterSeverity.op_Inequality(Azure.AI.OpenAI.ContentFilterSeverity,Azure.AI.OpenAI.ContentFilterSeverity)">
            <summary> Determines if two <see cref="T:Azure.AI.OpenAI.ContentFilterSeverity" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.ContentFilterSeverity.op_Implicit(System.String)~Azure.AI.OpenAI.ContentFilterSeverity">
            <summary> Converts a string to a <see cref="T:Azure.AI.OpenAI.ContentFilterSeverity" />. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.ContentFilterSeverity.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.AI.OpenAI.ContentFilterSeverity.Equals(Azure.AI.OpenAI.ContentFilterSeverity)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.AI.OpenAI.ContentFilterSeverity.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.AI.OpenAI.ContentFilterSeverity.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.AI.OpenAI.EmbeddingItem">
            <summary> Representation of a single embeddings relatedness comparison. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.EmbeddingItem.#ctor(System.Collections.Generic.IEnumerable{System.Single},System.Int32)">
            <summary> Initializes a new instance of EmbeddingItem. </summary>
            <param name="embedding">
            List of embeddings value for the input prompt. These represent a measurement of the
            vector-based relatedness of the provided input.
            </param>
            <param name="index"> Index of the prompt to which the EmbeddingItem corresponds. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="embedding" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.OpenAI.EmbeddingItem.#ctor(System.Collections.Generic.IReadOnlyList{System.Single},System.Int32)">
            <summary> Initializes a new instance of EmbeddingItem. </summary>
            <param name="embedding">
            List of embeddings value for the input prompt. These represent a measurement of the
            vector-based relatedness of the provided input.
            </param>
            <param name="index"> Index of the prompt to which the EmbeddingItem corresponds. </param>
        </member>
        <member name="P:Azure.AI.OpenAI.EmbeddingItem.Embedding">
            <summary>
            List of embeddings value for the input prompt. These represent a measurement of the
            vector-based relatedness of the provided input.
            </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.EmbeddingItem.Index">
            <summary> Index of the prompt to which the EmbeddingItem corresponds. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.EmbeddingItem.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="T:Azure.AI.OpenAI.Embeddings">
            <summary>
            Representation of the response data from an embeddings request.
            Embeddings measure the relatedness of text strings and are commonly used for search, clustering,
            recommendations, and other similar scenarios.
            </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.Embeddings.#ctor(System.Collections.Generic.IEnumerable{Azure.AI.OpenAI.EmbeddingItem},Azure.AI.OpenAI.EmbeddingsUsage)">
            <summary> Initializes a new instance of Embeddings. </summary>
            <param name="data"> Embedding values for the prompts submitted in the request. </param>
            <param name="usage"> Usage counts for tokens input using the embeddings API. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> or <paramref name="usage" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.OpenAI.Embeddings.#ctor(System.Collections.Generic.IReadOnlyList{Azure.AI.OpenAI.EmbeddingItem},Azure.AI.OpenAI.EmbeddingsUsage)">
            <summary> Initializes a new instance of Embeddings. </summary>
            <param name="data"> Embedding values for the prompts submitted in the request. </param>
            <param name="usage"> Usage counts for tokens input using the embeddings API. </param>
        </member>
        <member name="P:Azure.AI.OpenAI.Embeddings.Data">
            <summary> Embedding values for the prompts submitted in the request. </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.Embeddings.Usage">
            <summary> Usage counts for tokens input using the embeddings API. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.Embeddings.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="T:Azure.AI.OpenAI.EmbeddingsUsage">
            <summary> Measurement of the amount of tokens used in this request and response. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.EmbeddingsUsage.#ctor(System.Int32,System.Int32)">
            <summary> Initializes a new instance of EmbeddingsUsage. </summary>
            <param name="promptTokens"> Number of tokens sent in the original request. </param>
            <param name="totalTokens"> Total number of tokens transacted in this request/response. </param>
        </member>
        <member name="P:Azure.AI.OpenAI.EmbeddingsUsage.PromptTokens">
            <summary> Number of tokens sent in the original request. </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.EmbeddingsUsage.TotalTokens">
            <summary> Total number of tokens transacted in this request/response. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.EmbeddingsUsage.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="T:Azure.AI.OpenAI.ImageLocation">
            <summary> An image response item that provides a URL from which an image may be accessed. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.ImageLocation.#ctor(System.Uri)">
            <summary> Initializes a new instance of ImageLocation. </summary>
            <param name="url"> The URL that provides temporary access to download the generated image. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="url" /> is null. </exception>
        </member>
        <member name="P:Azure.AI.OpenAI.ImageLocation.Url">
            <summary> The URL that provides temporary access to download the generated image. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.ImageLocation.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="T:Azure.AI.OpenAI.ImageSize">
            <summary> The desired size of the generated images. Must be one of 256x256, 512x512, or 1024x1024. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.ImageSize.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.OpenAI.ImageSize" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.AI.OpenAI.ImageSize.Size256x256">
            <summary> Image size of 256x256. </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.ImageSize.Size512x512">
            <summary> Image size of 512x512. </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.ImageSize.Size1024x1024">
            <summary> Image size of 1024x1024. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.ImageSize.op_Equality(Azure.AI.OpenAI.ImageSize,Azure.AI.OpenAI.ImageSize)">
            <summary> Determines if two <see cref="T:Azure.AI.OpenAI.ImageSize" /> values are the same. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.ImageSize.op_Inequality(Azure.AI.OpenAI.ImageSize,Azure.AI.OpenAI.ImageSize)">
            <summary> Determines if two <see cref="T:Azure.AI.OpenAI.ImageSize" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.ImageSize.op_Implicit(System.String)~Azure.AI.OpenAI.ImageSize">
            <summary> Converts a string to a <see cref="T:Azure.AI.OpenAI.ImageSize" />. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.ImageSize.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.AI.OpenAI.ImageSize.Equals(Azure.AI.OpenAI.ImageSize)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.AI.OpenAI.ImageSize.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.AI.OpenAI.ImageSize.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.AI.OpenAI.OpenAIClientOptions">
            <summary> Client options for OpenAIClient. </summary>
        </member>
        <member name="T:Azure.AI.OpenAI.OpenAIClientOptions.ServiceVersion">
            <summary> The version of the service to use. </summary>
        </member>
        <member name="F:Azure.AI.OpenAI.OpenAIClientOptions.ServiceVersion.V2022_12_01">
            <summary> Service version "2022-12-01". </summary>
        </member>
        <member name="F:Azure.AI.OpenAI.OpenAIClientOptions.ServiceVersion.V2023_05_15">
            <summary> Service version "2023-05-15". </summary>
        </member>
        <member name="F:Azure.AI.OpenAI.OpenAIClientOptions.ServiceVersion.V2023_06_01_Preview">
            <summary> Service version "2023-06-01-preview". </summary>
        </member>
        <member name="F:Azure.AI.OpenAI.OpenAIClientOptions.ServiceVersion.V2023_07_01_Preview">
            <summary> Service version "2023-07-01-preview". </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.OpenAIClientOptions.#ctor(Azure.AI.OpenAI.OpenAIClientOptions.ServiceVersion)">
            <summary> Initializes new instance of OpenAIClientOptions. </summary>
        </member>
        <member name="T:Azure.AI.OpenAI.PromptFilterResult">
            <summary> Content filtering results for a single prompt in the request. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.PromptFilterResult.#ctor(System.Int32)">
            <summary> Initializes a new instance of PromptFilterResult. </summary>
            <param name="promptIndex"> The index of this prompt in the set of prompt results. </param>
        </member>
        <member name="M:Azure.AI.OpenAI.PromptFilterResult.#ctor(System.Int32,Azure.AI.OpenAI.ContentFilterResults)">
            <summary> Initializes a new instance of PromptFilterResult. </summary>
            <param name="promptIndex"> The index of this prompt in the set of prompt results. </param>
            <param name="contentFilterResults"> Content filtering results for this prompt. </param>
        </member>
        <member name="P:Azure.AI.OpenAI.PromptFilterResult.PromptIndex">
            <summary> The index of this prompt in the set of prompt results. </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.PromptFilterResult.ContentFilterResults">
            <summary> Content filtering results for this prompt. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.PromptFilterResult.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="T:Azure.Core.ArrayBufferWriter`1">
            <summary>
            Represents a heap-based, array-backed output sink into which <typeparam name="T" /> data can be written.
            </summary>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.#ctor">
            <summary>
            Creates an instance of an <see cref="T:Azure.Core.ArrayBufferWriter`1" />, in which data can be written to,
            with the default initial capacity.
            </summary>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.#ctor(System.Int32)">
            <summary>
            Creates an instance of an <see cref="T:Azure.Core.ArrayBufferWriter`1" />, in which data can be written to,
            with an initial capacity specified.
            </summary>
            <param name="initialCapacity">The minimum capacity with which to initialize the underlying buffer.</param>
            <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="initialCapacity" /> is not positive (i.e. less than or equal to 0).
            </exception>
        </member>
        <member name="P:Azure.Core.ArrayBufferWriter`1.WrittenMemory">
            <summary>
            Returns the data written to the underlying buffer so far, as a <see cref="T:System.ReadOnlyMemory`1" />.
            </summary>
        </member>
        <member name="P:Azure.Core.ArrayBufferWriter`1.WrittenSpan">
            <summary>
            Returns the data written to the underlying buffer so far, as a <see cref="T:System.ReadOnlySpan`1" />.
            </summary>
        </member>
        <member name="P:Azure.Core.ArrayBufferWriter`1.WrittenCount">
            <summary>
            Returns the amount of data written to the underlying buffer so far.
            </summary>
        </member>
        <member name="P:Azure.Core.ArrayBufferWriter`1.Capacity">
            <summary>
            Returns the total amount of space within the underlying buffer.
            </summary>
        </member>
        <member name="P:Azure.Core.ArrayBufferWriter`1.FreeCapacity">
            <summary>
            Returns the amount of space available that can still be written into without forcing the underlying buffer to grow.
            </summary>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.Clear">
            <summary>
            Clears the data written to the underlying buffer.
            </summary>
            <remarks>
            You must clear the <see cref="T:Azure.Core.ArrayBufferWriter`1" /> before trying to re-use it.
            </remarks>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.Advance(System.Int32)">
            <summary>
            Notifies <see cref="T:System.Buffers.IBufferWriter`1" /> that <paramref name="count" /> amount of data was written to the output <see cref="T:System.Span`1" />/<see cref="T:System.Memory`1" />.
            </summary>
            <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="count" /> is negative.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Thrown when attempting to advance past the end of the underlying buffer.
            </exception>
            <remarks>
            You must request a new buffer after calling Advance to continue writing more data and cannot write to a previously acquired buffer.
            </remarks>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.GetMemory(System.Int32)">
            <summary>
            Returns a <see cref="T:System.Memory`1" /> to write to that is at least the requested length (specified by <paramref name="sizeHint" />).
            If no <paramref name="sizeHint" /> is provided (or it's equal to <code>0</code>), some non-empty buffer is returned.
            </summary>
            <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="sizeHint" /> is negative.
            </exception>
            <remarks>
            This will never return an empty <see cref="T:System.Memory`1" />.
            </remarks>
            <remarks>
            There is no guarantee that successive calls will return the same buffer or the same-sized buffer.
            </remarks>
            <remarks>
            You must request a new buffer after calling Advance to continue writing more data and cannot write to a previously acquired buffer.
            </remarks>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.GetSpan(System.Int32)">
            <summary>
            Returns a <see cref="T:System.Span`1" /> to write to that is at least the requested length (specified by <paramref name="sizeHint" />).
            If no <paramref name="sizeHint" /> is provided (or it's equal to <code>0</code>), some non-empty buffer is returned.
            </summary>
            <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="sizeHint" /> is negative.
            </exception>
            <remarks>
            This will never return an empty <see cref="T:System.Span`1" />.
            </remarks>
            <remarks>
            There is no guarantee that successive calls will return the same buffer or the same-sized buffer.
            </remarks>
            <remarks>
            You must request a new buffer after calling Advance to continue writing more data and cannot write to a previously acquired buffer.
            </remarks>
        </member>
        <member name="M:Azure.Core.AzureKeyCredentialPolicy.#ctor(Azure.AzureKeyCredential,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.AzureKeyCredentialPolicy" /> class.
            </summary>
            <param name="credential">The <see cref="T:Azure.AzureKeyCredential" /> used to authenticate requests.</param>
            <param name="name">The name of the key header used for the credential.</param>
            <param name="prefix">The prefix to apply before the credential key. For example, a prefix of "SharedAccessKey" would result in
            a value of "SharedAccessKey {credential.Key}" being stamped on the request header with header key of <paramref name="name" />.</param>
        </member>
        <member name="M:Azure.Core.AzureKeyCredentialPolicy.OnSendingRequest(Azure.Core.HttpMessage)">
            <summary>
            Method is invoked before the request is sent.
            </summary><param name="message">The <see cref="T:Azure.Core.HttpMessage" /> containing the request.</param>
        </member>
        <member name="T:Azure.Core.AzureResourceProviderNamespaceAttribute">
            <summary>
            This attribute should be set on all client assemblies with value of one of the resource providers
            from the https://docs.microsoft.com/azure/azure-resource-manager/management/azure-services-resource-providers list.
            </summary>
        </member>
        <member name="P:Azure.Core.CodeGenMemberSerializationHooksAttribute.SerializationValueHook">
            <summary>
            Gets or sets the method name to use when serializing the property value (property name excluded)
            The signature of the serialization hook method must be or compatible with when invoking:
            private void SerializeHook(Utf8JsonWriter writer);
            </summary>
        </member>
        <member name="P:Azure.Core.CodeGenMemberSerializationHooksAttribute.DeserializationValueHook">
            <summary>
            Gets or sets the method name to use when deserializing the property value from the JSON
            private static void DeserializationHook(JsonProperty property, ref TypeOfTheProperty propertyValue); // if the property is required
            private static void DeserializationHook(JsonProperty property, ref Optional&lt;TypeOfTheProperty&gt; propertyValue); // if the property is optional
            </summary>
        </member>
        <member name="P:Azure.Core.CodeGenModelAttribute.Usage">
            <summary>
            Gets or sets a coma separated list of additional model usage modes. Allowed values: model, error, intput, output.
            </summary>
        </member>
        <member name="P:Azure.Core.CodeGenModelAttribute.Formats">
            <summary>
            Gets or sets a coma separated list of additional model serialization formats.
            </summary>
        </member>
        <member name="P:Azure.Core.ProtocolOperation`1.Id">
            <summary>
            Gets an ID representing the operation that can be used to poll for
            the status of the long-running operation.
            </summary>
        </member>
        <member name="P:Azure.Core.ProtocolOperation`1.Value">
            <summary>
            Final result of the long-running operation.
            </summary><remarks>
            This property can be accessed only after the operation completes successfully (HasValue is true).
            </remarks>
        </member>
        <member name="P:Azure.Core.ProtocolOperation`1.HasCompleted">
            <summary>
            Returns true if the long-running operation completed.
            </summary>
        </member>
        <member name="P:Azure.Core.ProtocolOperation`1.HasValue">
            <summary>
            Returns true if the long-running operation completed successfully and has produced final result (accessible by Value property).
            </summary>
        </member>
        <member name="M:Azure.Core.ProtocolOperation`1.GetRawResponse">
            <summary>
            The last HTTP response received from the server.
            </summary><remarks>
            The last response returned from the server during the lifecycle of this instance.
            An instance of <see cref="T:Azure.Operation`1" /> sends requests to a server in UpdateStatusAsync, UpdateStatus, and other methods.
            Responses from these requests can be accessed using GetRawResponse.
            </remarks>
        </member>
        <member name="M:Azure.Core.ProtocolOperation`1.UpdateStatus(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get updated status of the long-running operation.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the service call.</param><returns>The HTTP response received from the server.</returns><remarks>
            This operation will update the value returned from GetRawResponse and might update HasCompleted.
            </remarks>
        </member>
        <member name="M:Azure.Core.ProtocolOperation`1.UpdateStatusAsync(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get updated status of the long-running operation.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the service call.</param><returns>The HTTP response received from the server.</returns><remarks>
            This operation will update the value returned from GetRawResponse and might update HasCompleted.
            </remarks>
        </member>
        <member name="M:Azure.Core.ProtocolOperation`1.WaitForCompletionAsync(System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final result of the operation.
            </remarks>
        </member>
        <member name="M:Azure.Core.ProtocolOperation`1.WaitForCompletionAsync(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="pollingInterval">
            The interval between status requests to the server.
            The interval can change based on information returned from the server.
            For example, the server might communicate to the client that there is not reason to poll for status change sooner than some time.
            </param><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final result of the operation.
            </remarks>
        </member>
        <member name="T:Azure.Core.AsyncLockWithValue`1">
            <summary>
            Primitive that combines async lock and value cache
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Azure.Core.AsyncLockWithValue`1.GetLockOrValueAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Method that either returns cached value or acquire a lock.
            If one caller has acquired a lock, other callers will be waiting for the lock to be released.
            If value is set, lock is released and all waiters get that value.
            If value isn't set, the next waiter in the queue will get the lock.
            </summary>
            <param name="async"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="P:Azure.Core.AsyncLockWithValue`1.LockOrValue.HasValue">
            <summary>
            Returns true if lock contains the cached value. Otherwise false.
            </summary>
        </member>
        <member name="P:Azure.Core.AsyncLockWithValue`1.LockOrValue.Value">
            <summary>
            Returns cached value if it was set when lock has been created. Throws exception otherwise.
            </summary>
            <exception cref="T:System.InvalidOperationException">Value isn't set.</exception>
        </member>
        <member name="M:Azure.Core.AsyncLockWithValue`1.LockOrValue.SetValue(`0)">
            <summary>
            Set value to the cache and to all the waiters.
            </summary>
            <param name="value"></param>
            <exception cref="T:System.InvalidOperationException">Value is set already.</exception>
        </member>
        <member name="T:Azure.Core.OperationInternal">
            <summary>
            A helper class used to build long-running operation instances. In order to use this helper:
            <list type="number">
              <item>Make sure your LRO implements the <see cref="T:Azure.Core.IOperation" /> interface.</item>
              <item>Add a private <see cref="T:Azure.Core.OperationInternal" /> field to your LRO, and instantiate it during construction.</item>
              <item>Delegate method calls to the <see cref="T:Azure.Core.OperationInternal" /> implementations.</item>
            </list>
            Supported members:
            <list type="bullet">
              <item>
                <description><see cref="P:Azure.Core.OperationInternalBase.HasCompleted" /></description>
              </item>
              <item>
                <description><see cref="P:Azure.Core.OperationInternalBase.RawResponse" />, used for <see cref="M:Azure.Operation.GetRawResponse" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.WaitForCompletionResponseAsync(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.WaitForCompletionResponseAsync(System.TimeSpan,System.Threading.CancellationToken)" /></description>
              </item>
            </list>
            </summary>
        </member>
        <member name="M:Azure.Core.OperationInternal.Succeeded(Azure.Response)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal" /> class in a final successful state.
            </summary>
            <param name="rawResponse">The final value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />.</param>
        </member>
        <member name="M:Azure.Core.OperationInternal.Failed(Azure.Response,Azure.RequestFailedException)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal" /> class in a final failed state.
            </summary>
            <param name="rawResponse">The final value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />.</param>
            <param name="operationFailedException">The exception that will be thrown by <c>UpdateStatusAsync</c>.</param>
        </member>
        <member name="M:Azure.Core.OperationInternal.#ctor(Azure.Core.IOperation,Azure.Core.Pipeline.ClientDiagnostics,Azure.Response,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},Azure.Core.DelayStrategy)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal" /> class.
            </summary>
            <param name="operation">The long-running operation making use of this class. Passing "<c>this</c>" is expected.</param>
            <param name="clientDiagnostics">Used for diagnostic scope and exception creation. This is expected to be the instance created during the construction of your main client.</param>
            <param name="rawResponse">
                The initial value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />. Usually, long-running operation objects can be instantiated in two ways:
                <list type="bullet">
                    <item>
                        When calling a client's "<c>Start&lt;OperationName&gt;</c>" method, a service call is made to start the operation, and an <see cref="T:Azure.Operation" /> instance is returned.
                        In this case, the response received from this service call can be passed here.
                    </item>
                    <item>
                        When a user instantiates an <see cref="T:Azure.Operation" /> directly using a public constructor, there's no previous service call. In this case, passing <c>null</c> is expected.
                    </item>
                </list>
            </param>
            <param name="operationTypeName">
                The type name of the long-running operation making use of this class. Used when creating diagnostic scopes. If left <c>null</c>, the type name will be inferred based on the
                parameter <paramref name="operation" />.
            </param>
            <param name="scopeAttributes">The attributes to use during diagnostic scope creation.</param>
            <param name="fallbackStrategy"> The delay strategy to use. Default is <see cref="T:Azure.Core.FixedDelayWithNoJitterStrategy" />.</param>
        </member>
        <member name="T:Azure.Core.IOperation">
            <summary>
            An interface used by <see cref="T:Azure.Core.OperationInternal" /> for making service calls and updating state. It's expected that
            your long-running operation classes implement this interface.
            </summary>
        </member>
        <member name="M:Azure.Core.IOperation.UpdateStateAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Calls the service and updates the state of the long-running operation. Properties directly handled by the
            <see cref="T:Azure.Core.OperationInternal" /> class, such as <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />
            don't need to be updated. Operation-specific properties, such as "<c>CreateOn</c>" or "<c>LastModified</c>",
            must be manually updated by the operation implementing this method.
            <example>Usage example:
            <code>
              async ValueTask&lt;OperationState&gt; IOperation.UpdateStateAsync(bool async, CancellationToken cancellationToken)<br />
              {<br />
                Response&lt;R&gt; response = async ? &lt;async service call&gt; : &lt;sync service call&gt;;<br />
                if (&lt;operation succeeded&gt;) return OperationState.Success(response.GetRawResponse(), &lt;parse response&gt;);<br />
                if (&lt;operation failed&gt;) return OperationState.Failure(response.GetRawResponse());<br />
                return OperationState.Pending(response.GetRawResponse());<br />
              }
            </code>
            </example>
            </summary>
            <param name="async"><c>true</c> if the call should be executed asynchronously. Otherwise, <c>false</c>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>
            A structure indicating the current operation state. The <see cref="T:Azure.Core.OperationState" /> structure must be instantiated by one of
            its static methods:
            <list type="bullet">
              <item>Use <see cref="M:Azure.Core.OperationState.Success(Azure.Response)" /> when the operation has completed successfully.</item>
              <item>Use <see cref="M:Azure.Core.OperationState.Failure(Azure.Response,Azure.RequestFailedException)" /> when the operation has completed with failures.</item>
              <item>Use <see cref="M:Azure.Core.OperationState.Pending(Azure.Response)" /> when the operation has not completed yet.</item>
            </list>
            </returns>
        </member>
        <member name="T:Azure.Core.OperationState">
            <summary>
            A helper structure passed to <see cref="T:Azure.Core.OperationInternal" /> to indicate the current operation state. This structure must be
            instantiated by one of its static methods, depending on the operation state:
            <list type="bullet">
              <item>Use <see cref="M:Azure.Core.OperationState.Success(Azure.Response)" /> when the operation has completed successfully.</item>
              <item>Use <see cref="M:Azure.Core.OperationState.Failure(Azure.Response,Azure.RequestFailedException)" /> when the operation has completed with failures.</item>
              <item>Use <see cref="M:Azure.Core.OperationState.Pending(Azure.Response)" /> when the operation has not completed yet.</item>
            </list>
            </summary>
        </member>
        <member name="M:Azure.Core.OperationState.Success(Azure.Response)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState" /> indicating the operation has completed successfully.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <returns>A new <see cref="T:Azure.Core.OperationState" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> is <c>null</c>.</exception>
        </member>
        <member name="M:Azure.Core.OperationState.Failure(Azure.Response,Azure.RequestFailedException)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState" /> indicating the operation has completed with failures.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <param name="operationFailedException">
            The exception to throw from <c>UpdateStatus</c> because of the operation failure. If left <c>null</c>,
            a default exception is created based on the <paramref name="rawResponse" /> parameter.
            </param>
            <returns>A new <see cref="T:Azure.Core.OperationState" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> is <c>null</c>.</exception>
        </member>
        <member name="M:Azure.Core.OperationState.Pending(Azure.Response)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState" /> indicating the operation has not completed yet.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <returns>A new <see cref="T:Azure.Core.OperationState" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> is <c>null</c>.</exception>
        </member>
        <member name="P:Azure.Core.OperationInternalBase.RawResponse">
            <summary>
            The last HTTP response received from the server. Its update already handled in calls to "<c>UpdateStatus</c>" and
            "<c>WaitForCompletionAsync</c>", but custom methods not supported by this class, such as "<c>CancelOperation</c>",
            must update it as well.
            <example>Usage example:
            <code>
              public Response GetRawResponse() =&gt; _operationInternal.RawResponse;
            </code>
            </example>
            </summary>
        </member>
        <member name="P:Azure.Core.OperationInternalBase.HasCompleted">
            <summary>
            Returns <c>true</c> if the long-running operation has completed.
            <example>Usage example:
            <code>
              public bool HasCompleted =&gt; _operationInternal.HasCompleted;
            </code>
            </example>
            </summary>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get the latest status of the long-running operation, handling diagnostic scope creation for distributed
            tracing. The default scope name can be changed with the "<c>operationTypeName</c>" parameter passed to the constructor.
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&gt; UpdateStatusAsync(CancellationToken cancellationToken) =&gt;
                await _operationInternal.UpdateStatusAsync(cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The HTTP response received from the server.</returns>
            <remarks>
            After a successful run, this method will update <see cref="P:Azure.Core.OperationInternalBase.RawResponse" /> and might update <see cref="P:Azure.Core.OperationInternalBase.HasCompleted" />.
            </remarks>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get the latest status of the long-running operation, handling diagnostic scope creation for distributed
            tracing. The default scope name can be changed with the "<c>operationTypeName</c>" parameter passed to the constructor.
            <example>Usage example:
            <code>
              public Response UpdateStatus(CancellationToken cancellationToken) =&gt; _operationInternal.UpdateStatus(cancellationToken);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The HTTP response received from the server.</returns>
            <remarks>
            After a successful run, this method will update <see cref="P:Azure.Core.OperationInternalBase.RawResponse" /> and might update <see cref="P:Azure.Core.OperationInternalBase.HasCompleted" />.
            </remarks>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.WaitForCompletionResponseAsync(System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /> until the long-running operation completes.
            After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed.  The maximum of the retry after value and the fallback strategy
            is then used as the wait interval.
            Headers supported are: "Retry-After", "retry-after-ms", and "x-ms-retry-after-ms",
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.WaitForCompletionResponseAsync(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /> until the long-running operation completes. The interval
            between calls is defined by the parameter <paramref name="pollingInterval" />, but it can change based on information returned
            from the server. After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed. In this case, the maximum value between the <paramref name="pollingInterval" />
            parameter and the retry-after header is chosen as the wait interval. Headers supported are: "Retry-After", "retry-after-ms",
            and "x-ms-retry-after-ms".
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(pollingInterval, cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="pollingInterval">The interval between status requests to the server. <strong></strong></param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.WaitForCompletionResponse(System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /> until the long-running operation completes.
            After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed.  The maximum of the retry after value and the fallback strategy
            is then used as the wait interval.
            Headers supported are: "Retry-After", "retry-after-ms", and "x-ms-retry-after-ms",
            and "x-ms-retry-after-ms".
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(pollingInterval, cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.WaitForCompletionResponse(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /> until the long-running operation completes. The interval
            between calls is defined by the parameter <paramref name="pollingInterval" />, but it can change based on information returned
            from the server. After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed. In this case, the maximum value between the <paramref name="pollingInterval" />
            parameter and the retry-after header is chosen as the wait interval. Headers supported are: "Retry-After", "retry-after-ms",
            and "x-ms-retry-after-ms".
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(pollingInterval, cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="pollingInterval">The interval between status requests to the server.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="T:Azure.Core.OperationInternal`1">
            <summary>
            A helper class used to build long-running operation instances. In order to use this helper:
            <list type="number">
              <item>Make sure your LRO implements the <see cref="T:Azure.Core.IOperation`1" /> interface.</item>
              <item>Add a private <see cref="T:Azure.Core.OperationInternal`1" /> field to your LRO, and instantiate it during construction.</item>
              <item>Delegate method calls to the <see cref="T:Azure.Core.OperationInternal`1" /> implementations.</item>
            </list>
            Supported members:
            <list type="bullet">
              <item>
                <description><see cref="P:Azure.Core.OperationInternal`1.HasValue" /></description>
              </item>
              <item>
                <description><see cref="P:Azure.Core.OperationInternalBase.HasCompleted" /></description>
              </item>
              <item>
                <description><see cref="P:Azure.Core.OperationInternal`1.Value" /></description>
              </item>
              <item>
                <description><see cref="P:Azure.Core.OperationInternalBase.RawResponse" />, used for <see cref="M:Azure.Operation.GetRawResponse" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternal`1.WaitForCompletionAsync(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternal`1.WaitForCompletionAsync(System.TimeSpan,System.Threading.CancellationToken)" /></description>
              </item>
            </list>
            </summary>
            <typeparam name="T">The final result of the long-running operation. Must match the type used in <see cref="T:Azure.Operation`1" />.</typeparam>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.Succeeded(Azure.Response,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal" /> class in a final successful state.
            </summary>
            <param name="rawResponse">The final value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />.</param>
            <param name="value">The final result of the long-running operation.</param>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.Failed(Azure.Response,Azure.RequestFailedException)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal" /> class in a final failed state.
            </summary>
            <param name="rawResponse">The final value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />.</param>
            <param name="operationFailedException">The exception that will be thrown by <c>UpdateStatusAsync</c>.</param>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.#ctor(Azure.Core.IOperation{`0},Azure.Core.Pipeline.ClientDiagnostics,Azure.Response,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},Azure.Core.DelayStrategy)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal`1" /> class.
            </summary>
            <param name="operation">The long-running operation making use of this class. Passing "<c>this</c>" is expected.</param>
            <param name="clientDiagnostics">Used for diagnostic scope and exception creation. This is expected to be the instance created during the construction of your main client.</param>
            <param name="rawResponse">
                The initial value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />. Usually, long-running operation objects can be instantiated in two ways:
                <list type="bullet">
                    <item>
                        When calling a client's "<c>Start&lt;OperationName&gt;</c>" method, a service call is made to start the operation, and an <see cref="T:Azure.Operation`1" /> instance is returned.
                        In this case, the response received from this service call can be passed here.
                    </item>
                    <item>
                        When a user instantiates an <see cref="T:Azure.Operation`1" /> directly using a public constructor, there's no previous service call. In this case, passing <c>null</c> is expected.
                    </item>
                </list>
            </param>
            <param name="operationTypeName">
                The type name of the long-running operation making use of this class. Used when creating diagnostic scopes. If left <c>null</c>, the type name will be inferred based on the
                parameter <paramref name="operation" />.
            </param>
            <param name="scopeAttributes">The attributes to use during diagnostic scope creation.</param>
            <param name="fallbackStrategy">The delay strategy when Retry-After header is not present.  When it is present, the longer of the two delays will be used.
                Default is <see cref="T:Azure.Core.FixedDelayWithNoJitterStrategy" />.</param>
        </member>
        <member name="P:Azure.Core.OperationInternal`1.HasValue">
            <summary>
            Returns <c>true</c> if the long-running operation completed successfully and has produced a final result.
            <example>Usage example:
            <code>
              public bool HasValue =&gt; _operationInternal.HasValue;
            </code>
            </example>
            </summary>
        </member>
        <member name="P:Azure.Core.OperationInternal`1.Value">
            <summary>
            The final result of the long-running operation.
            <example>Usage example:
            <code>
              public T Value =&gt; _operationInternal.Value;
            </code>
            </example>
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown when the operation has not completed yet.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.WaitForCompletionAsync(System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /> until the long-running operation completes.
            After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed.
            Headers supported are: "Retry-After", "retry-after-ms", and "x-ms-retry-after-ms",
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.WaitForCompletionAsync(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /> until the long-running operation completes. The interval
            between calls is defined by the parameter <paramref name="pollingInterval" />, but it can change based on information returned
            from the server. After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed. In this case, the maximum value between the <paramref name="pollingInterval" />
            parameter and the retry-after header is chosen as the wait interval. Headers supported are: "Retry-After", "retry-after-ms",
            and "x-ms-retry-after-ms".
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(pollingInterval, cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="pollingInterval">The interval between status requests to the server.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.WaitForCompletion(System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /> until the long-running operation completes.
            After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed.
            Headers supported are: "Retry-After", "retry-after-ms", and "x-ms-retry-after-ms",
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.WaitForCompletion(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /> until the long-running operation completes. The interval
            between calls is defined by the <see cref="T:Azure.Core.FixedDelayWithNoJitterStrategy" />, which takes into account any retry-after header that is returned
            from the server.
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="pollingInterval">The interval between status requests to the server.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="T:Azure.Core.IOperation`1">
            <summary>
            An interface used by <see cref="T:Azure.Core.OperationInternal`1" /> for making service calls and updating state. It's expected that
            your long-running operation classes implement this interface.
            </summary>
            <typeparam name="T">The final result of the long-running operation. Must match the type used in <see cref="T:Azure.Operation`1" />.</typeparam>
        </member>
        <member name="M:Azure.Core.IOperation`1.UpdateStateAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Calls the service and updates the state of the long-running operation. Properties directly handled by the
            <see cref="T:Azure.Core.OperationInternal`1" /> class, such as <see cref="P:Azure.Core.OperationInternalBase.RawResponse" /> or
            <see cref="P:Azure.Core.OperationInternal`1.Value" />, don't need to be updated. Operation-specific properties, such
            as "<c>CreateOn</c>" or "<c>LastModified</c>", must be manually updated by the operation implementing this
            method.
            <example>Usage example:
            <code>
              async ValueTask&lt;OperationState&lt;T&gt;&gt; IOperation&lt;T&gt;.UpdateStateAsync(bool async, CancellationToken cancellationToken)<br />
              {<br />
                Response&lt;R&gt; response = async ? &lt;async service call&gt; : &lt;sync service call&gt;;<br />
                if (&lt;operation succeeded&gt;) return OperationState&lt;T&gt;.Success(response.GetRawResponse(), &lt;parse response&gt;);<br />
                if (&lt;operation failed&gt;) return OperationState&lt;T&gt;.Failure(response.GetRawResponse());<br />
                return OperationState&lt;T&gt;.Pending(response.GetRawResponse());<br />
              }
            </code>
            </example>
            </summary>
            <param name="async"><c>true</c> if the call should be executed asynchronously. Otherwise, <c>false</c>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>
            A structure indicating the current operation state. The <see cref="T:Azure.Core.OperationState`1" /> structure must be instantiated by one of
            its static methods:
            <list type="bullet">
              <item>Use <see cref="M:Azure.Core.OperationState`1.Success(Azure.Response,`0)" /> when the operation has completed successfully.</item>
              <item>Use <see cref="M:Azure.Core.OperationState`1.Failure(Azure.Response,Azure.RequestFailedException)" /> when the operation has completed with failures.</item>
              <item>Use <see cref="M:Azure.Core.OperationState`1.Pending(Azure.Response)" /> when the operation has not completed yet.</item>
            </list>
            </returns>
        </member>
        <member name="T:Azure.Core.OperationState`1">
            <summary>
            A helper structure passed to <see cref="T:Azure.Core.OperationInternal`1" /> to indicate the current operation state. This structure must be
            instantiated by one of its static methods, depending on the operation state:
            <list type="bullet">
              <item>Use <see cref="M:Azure.Core.OperationState`1.Success(Azure.Response,`0)" /> when the operation has completed successfully.</item>
              <item>Use <see cref="M:Azure.Core.OperationState`1.Failure(Azure.Response,Azure.RequestFailedException)" /> when the operation has completed with failures.</item>
              <item>Use <see cref="M:Azure.Core.OperationState`1.Pending(Azure.Response)" /> when the operation has not completed yet.</item>
            </list>
            </summary>
            <typeparam name="T">The final result of the long-running operation. Must match the type used in <see cref="T:Azure.Operation`1" />.</typeparam>
        </member>
        <member name="M:Azure.Core.OperationState`1.Success(Azure.Response,`0)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState`1" /> indicating the operation has completed successfully.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <param name="value">The final result of the long-running operation.</param>
            <returns>A new <see cref="T:Azure.Core.OperationState`1" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> or <paramref name="value" /> is <c>null</c>.</exception>
        </member>
        <member name="M:Azure.Core.OperationState`1.Failure(Azure.Response,Azure.RequestFailedException)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState`1" /> indicating the operation has completed with failures.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <param name="operationFailedException">
            The exception to throw from <c>UpdateStatus</c> because of the operation failure. The same exception will be thrown when
            <see cref="P:Azure.Core.OperationInternal`1.Value" /> is called. If left <c>null</c>, a default exception is created based on the
            <paramref name="rawResponse" /> parameter.
            </param>
            <returns>A new <see cref="T:Azure.Core.OperationState`1" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> is <c>null</c>.</exception>
        </member>
        <member name="M:Azure.Core.OperationState`1.Pending(Azure.Response)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState`1" /> indicating the operation has not completed yet.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <returns>A new <see cref="T:Azure.Core.OperationState`1" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> is <c>null</c>.</exception>
        </member>
        <member name="T:Azure.Core.SequentialDelayStrategy">
            <summary>
            A delay strategy that uses a fixed sequence of delays with no jitter applied. This is used by management LROs.
            </summary>
        </member>
        <member name="T:Azure.Core.FixedDelayWithNoJitterStrategy">
            <summary>
            A delay strategy that uses a fixed delay with no jitter applied. This is used by data plane LROs.
            </summary>
        </member>
        <member name="T:Azure.Core.OperationPoller">
            <summary>
            Implementation of LRO polling logic.
            </summary>
        </member>
        <member name="M:Azure.Core.Pipeline.ClientDiagnostics.#ctor(Azure.Core.ClientOptions,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.Pipeline.ClientDiagnostics" /> class.
            </summary>
            <param name="options">The customer provided client options object.</param>
            <param name="suppressNestedClientActivities">Flag controlling if <see cref="T:System.Diagnostics.Activity" />
             created by this <see cref="T:Azure.Core.Pipeline.ClientDiagnostics" /> for client method calls should be suppressed when called
             by other Azure SDK client methods.  It's recommended to set it to true for new clients; use default (null)
             for backward compatibility reasons, or set it to false to explicitly disable suppression for specific cases.
             The default value could change in the future, the flag should be only set to false if suppression for the client
             should never be enabled.</param>
        </member>
        <member name="M:Azure.Core.Pipeline.ClientDiagnostics.#ctor(System.String,System.String,Azure.Core.DiagnosticsOptions,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.Pipeline.ClientDiagnostics" /> class.
            </summary>
            <param name="optionsNamespace">Namespace of the client class, such as Azure.Storage or Azure.AppConfiguration.</param>
            <param name="providerNamespace">Azure Resource Provider namespace of the Azure service SDK is primarily used for.</param>
            <param name="diagnosticsOptions">The customer provided client diagnostics options.</param>
            <param name="suppressNestedClientActivities">Flag controlling if <see cref="T:System.Diagnostics.Activity" />
             created by this <see cref="T:Azure.Core.Pipeline.ClientDiagnostics" /> for client method calls should be suppressed when called
             by other Azure SDK client methods.  It's recommended to set it to true for new clients, use default (null) for old clients
             for backward compatibility reasons, or set it to false to explicitly disable suppression for specific cases.
             The default value could change in the future, the flag should be only set to false if suppression for the client
             should never be enabled.</param>
        </member>
        <member name="M:Azure.Core.Pipeline.DiagnosticScope.AddLink(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Adds a link to the scope. This must be called before <see cref="M:Azure.Core.Pipeline.DiagnosticScope.Start" /> has been called for the DiagnosticScope.
            </summary>
            <param name="traceparent">The traceparent for the link.</param>
            <param name="tracestate">The tracestate for the link.</param>
            <param name="attributes">Optional attributes to associate with the link.</param>
        </member>
        <member name="M:Azure.Core.Pipeline.DiagnosticScope.SetTraceContext(System.String,System.String)">
            <summary>
            Sets the trace context for the current scope.
            </summary>
            <param name="traceparent">The trace parent to set for the current scope.</param>
            <param name="tracestate">The trace state to set for the current scope.</param>
        </member>
        <member name="M:Azure.Core.Pipeline.DiagnosticScope.Failed(System.Exception)">
            <summary>
            Marks the scope as failed.
            </summary>
            <param name="exception">The exception to associate with the failed scope.</param>
        </member>
        <member name="T:Azure.Core.Pipeline.ActivityExtensions">
            <summary>
            Until we can reference the 5.0 of System.Diagnostics.DiagnosticSource
            </summary>
        </member>
        <member name="T:Azure.Core.Pipeline.TaskExtensions.Enumerable`1">
            <summary>
            Both <see cref="T:Azure.Core.Pipeline.TaskExtensions.Enumerable`1" /> and <see cref="T:Azure.Core.Pipeline.TaskExtensions.Enumerator`1" /> are defined as public structs so that foreach can use duck typing
            to call <see cref="M:Azure.Core.Pipeline.TaskExtensions.Enumerable`1.GetEnumerator" /> and avoid heap memory allocation.
            Please don't delete this method and don't make these types private.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Azure.Core.Argument">
            <summary>
            Argument validation.
            </summary>
            <remarks>
              <para>This class should be shared via source using Azure.Core.props and contain only common argument validation.
                It is declared partial so that you can use the same familiar class name but extend it with project-specific validation.
                To extend the functionality of this class, just declare your own partial <see cref="T:Azure.Core.Argument" /> class with project-specific methods.
              </para>
              <para>
                Be sure to document exceptions thrown by these methods on your public methods.
              </para>
            </remarks>
        </member>
        <member name="M:Azure.Core.Argument.AssertNotNull``1(``0,System.String)">
            <summary>
            Throws if <paramref name="value" /> is null.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="value" /> is null.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertNotNull``1(System.Nullable{``0},System.String)">
            <summary>
            Throws if <paramref name="value" /> has not been initialized.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="value" /> has not been initialized.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertNotNullOrEmpty``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            Throws if <paramref name="value" /> is null or an empty collection.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value" /> is an empty collection.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="value" /> is null.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertNotNullOrEmpty(System.String,System.String)">
            <summary>
            Throws if <paramref name="value" /> is null or an empty string.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value" /> is an empty string.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="value" /> is null.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertNotNullOrWhiteSpace(System.String,System.String)">
            <summary>
            Throws if <paramref name="value" /> is null, an empty string, or consists only of white-space characters.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value" /> is an empty string or consists only of white-space characters.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="value" /> is null.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertNotDefault``1(``0@,System.String)">
            <summary>
            Throws if <paramref name="value" /> is the default value for type <typeparamref name="T" />.
            </summary>
            <typeparam name="T">The type of structure to validate which implements <see cref="T:System.IEquatable`1" />.</typeparam>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value" /> is the default value for type <typeparamref name="T" />.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertInRange``1(``0,``0,``0,System.String)">
            <summary>
            Throws if <paramref name="value" /> is less than the <paramref name="minimum" /> or greater than the <paramref name="maximum" />.
            </summary>
            <typeparam name="T">The type of to validate which implements <see cref="T:System.IComparable`1" />.</typeparam>
            <param name="value">The value to validate.</param>
            <param name="minimum">The minimum value to compare.</param>
            <param name="maximum">The maximum value to compare.</param>
            <param name="name">The name of the parameter.</param>
        </member>
        <member name="M:Azure.Core.Argument.AssertEnumDefined(System.Type,System.Object,System.String)">
            <summary>
            Throws if <paramref name="value" /> is not defined for <paramref name="enumType" />.
            </summary>
            <param name="enumType">The type to validate against.</param>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value" /> is not defined for <paramref name="enumType" />.</exception>
        </member>
        <member name="M:Azure.Core.Argument.CheckNotNull``1(``0,System.String)">
            <summary>
            Throws if <paramref name="value" /> has not been initialized; otherwise, returns <paramref name="value" />.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="value" /> has not been initialized.</exception>
        </member>
        <member name="M:Azure.Core.Argument.CheckNotNullOrEmpty(System.String,System.String)">
            <summary>
            Throws if <paramref name="value" /> is null or an empty string; otherwise, returns <paramref name="value" />.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value" /> is an empty string.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="value" /> is null.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertNull``1(``0,System.String,System.String)">
            <summary>
            Throws if <paramref name="value" /> is not null.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <param name="message">The error message.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value" /> is not null.</exception>
        </member>
        <member name="T:Azure.Core.AppContextSwitchHelper">
            <summary>
            Helper for interacting with AppConfig settings and their related Environment variable settings.
            </summary>
        </member>
        <member name="M:Azure.Core.AppContextSwitchHelper.GetConfigValue(System.String,System.String)">
            <summary>
            Determines if either an AppContext switch or its corresponding Environment Variable is set
            </summary>
            <param name="appContexSwitchName">Name of the AppContext switch.</param>
            <param name="environmentVariableName">Name of the Environment variable.</param>
            <returns>If the AppContext switch has been set, returns the value of the switch.
            If the AppContext switch has not been set, returns the value of the environment variable.
            False if neither is set.
            </returns>
        </member>
        <member name="T:Microsoft.Extensions.Azure.AIOpenAIClientBuilderExtensions">
            <summary> Extension methods to add <see cref="T:Azure.AI.OpenAI.OpenAIClient" /> to client builder. </summary>
        </member>
        <member name="M:Microsoft.Extensions.Azure.AIOpenAIClientBuilderExtensions.AddOpenAIClient``1(``0,System.Uri,Azure.AzureKeyCredential)">
            <summary> Registers a <see cref="T:Azure.AI.OpenAI.OpenAIClient" /> instance. </summary>
            <param name="builder"> The builder to register with. </param>
            <param name="endpoint">
            Supported Cognitive Services endpoints (protocol and hostname, for example:
            https://westus.api.cognitive.microsoft.com).
            </param>
            <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        </member>
        <member name="M:Microsoft.Extensions.Azure.AIOpenAIClientBuilderExtensions.AddOpenAIClient``1(``0,System.Uri)">
            <summary> Registers a <see cref="T:Azure.AI.OpenAI.OpenAIClient" /> instance. </summary>
            <param name="builder"> The builder to register with. </param>
            <param name="endpoint">
            Supported Cognitive Services endpoints (protocol and hostname, for example:
            https://westus.api.cognitive.microsoft.com).
            </param>
        </member>
        <member name="M:Microsoft.Extensions.Azure.AIOpenAIClientBuilderExtensions.AddOpenAIClient``2(``0,``1)">
            <summary> Registers a <see cref="T:Azure.AI.OpenAI.OpenAIClient" /> instance. </summary>
            <param name="builder"> The builder to register with. </param>
            <param name="configuration"> The configuration values. </param>
        </member>
        <member name="M:Azure.Core.ChangeTrackingDictionary`2.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:Azure.Core.ChangeTrackingDictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey@TValue}#Keys">
            <summary>Gets an enumerable collection that contains the keys in the read-only dictionary.</summary><returns>An enumerable collection that contains the keys in the read-only dictionary.</returns>
        </member>
        <member name="P:Azure.Core.ChangeTrackingDictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey@TValue}#Values">
            <summary>Gets an enumerable collection that contains the values in the read-only dictionary.</summary><returns>An enumerable collection that contains the values in the read-only dictionary.</returns>
        </member>
        <member name="M:Azure.Core.ChangeTrackingList`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.Core.Pipeline.TaskExtensions.Enumerable`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.Core.Pipeline.TaskExtensions.Enumerable`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:Azure.Core.Pipeline.TaskExtensions.Enumerator`1.System#Collections#IEnumerator#Current">
            <summary>Gets the element in the collection at the current position of the enumerator.</summary><returns>The element in the collection at the current position of the enumerator.</returns>
        </member>
    </members>
</doc>
